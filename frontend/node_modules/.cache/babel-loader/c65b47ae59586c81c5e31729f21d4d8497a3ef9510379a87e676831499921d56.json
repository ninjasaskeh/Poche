{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nfunction isGroup(input) {\n  return \"group\" in input;\n}\nfunction NativeSelectOption(_ref) {\n  let {\n    data\n  } = _ref;\n  if (isGroup(data)) {\n    const items = data.items.map(item => /* @__PURE__ */jsx(NativeSelectOption, {\n      data: item\n    }, item.value));\n    return /* @__PURE__ */jsx(\"optgroup\", {\n      label: data.group,\n      children: items\n    });\n  }\n  const {\n    value,\n    label,\n    ...others\n  } = data;\n  return /* @__PURE__ */jsx(\"option\", {\n    value: data.value,\n    ...others,\n    children: data.label\n  }, data.value);\n}\nNativeSelectOption.displayName = \"@mantine/core/NativeSelectOption\";\nexport { NativeSelectOption };","map":{"version":3,"mappings":";;;AAEA,SAASA,OAAO,CAACC,KAAK,EAAE;EACtB,OAAO,OAAO,IAAIA,KAAK;AACzB;AACO,SAASC,kBAAkB,OAAW;EAAA,IAAV;IAAEC;EAAI,CAAE;EACzC,IAAIH,OAAO,CAACG,IAAI,CAAC,EAAE;IACjB,MAAMC,KAAK,GAAGD,IAAI,CAACC,KAAK,CAACC,GAAG,CAAEC,IAAI,IAAqB,kBAAG,CAACJ,kBAAkB,EAAE;MAAEC,IAAI,EAAEG;IAAI,CAAE,EAAEA,IAAI,CAACC,KAAK,CAAC,CAAC;IAC3G,sBAAuBC,GAAG,CAAC,UAAU,EAAE;MAAEC,KAAK,EAAEN,IAAI,CAACO,KAAK;MAAEC,QAAQ,EAAEP;IAAK,CAAE,CAAC;EAC/E;EACD,MAAM;IAAEG,KAAK;IAAEE,KAAK;IAAE,GAAGG;EAAM,CAAE,GAAGT,IAAI;EACxC,sBAAuBK,GAAG,CAAC,QAAQ,EAAE;IAAED,KAAK,EAAEJ,IAAI,CAACI,KAAK;IAAE,GAAGK,MAAM;IAAED,QAAQ,EAAER,IAAI,CAACM;EAAO,GAAEN,IAAI,CAACI,KAAK,CAAC;AAC1G;AACAL,kBAAkB,CAACW,WAAW,GAAG,kCAAkC","names":["isGroup","input","NativeSelectOption","data","items","map","item","value","jsx","label","group","children","others","displayName"],"sources":["/Users/tnkuseija/Desktop/poche/frontend/node_modules/@mantine/core/src/components/NativeSelect/NativeSelectOption.tsx"],"sourcesContent":["import { ComboboxParsedItem, ComboboxParsedItemGroup } from '../Combobox';\n\nexport interface NativeSelectOptionProps {\n  data: ComboboxParsedItem;\n}\n\nfunction isGroup(input: ComboboxParsedItem): input is ComboboxParsedItemGroup {\n  return 'group' in input;\n}\n\nexport function NativeSelectOption({ data }: NativeSelectOptionProps) {\n  if (isGroup(data)) {\n    const items = data.items.map((item) => <NativeSelectOption key={item.value} data={item} />);\n    return <optgroup label={data.group}>{items}</optgroup>;\n  }\n\n  const { value, label, ...others } = data;\n\n  return (\n    <option key={data.value} value={data.value} {...others}>\n      {data.label}\n    </option>\n  );\n}\n\nNativeSelectOption.displayName = '@mantine/core/NativeSelectOption';\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}