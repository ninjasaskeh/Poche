{"ast":null,"code":"var _jsxFileName = \"/Users/tnkuseija/Desktop/poche/frontend/src/Components/Todo/Todolist.js\",\n  _s = $RefreshSig$();\nimport styled from \"styled-components\";\nimport { InnerLayout } from \"../../styles/Layouts\";\nimport { Button, Container, Text, Title, Modal, TextInput, Group, Card, ActionIcon, Code } from \"@mantine/core\";\nimport { useState, useRef, useEffect } from \"react\";\nimport { MoonStars, Sun, IconTrash } from \"@tabler/icons-react\";\nimport { useLocalStorage } from \"@mantine/hooks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Todolist() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [opened, setOpened] = useState(false);\n  const [colorScheme, setColorScheme] = useLocalStorage({\n    key: \"mantine-color-scheme\",\n    defaultValue: \"light\",\n    getInitialValueInEffect: true\n  });\n  const taskTitle = useRef(\"\");\n  const taskSummary = useRef(\"\");\n  function createTask() {\n    setTasks([...tasks, {\n      title: taskTitle.current.value,\n      summary: taskSummary.current.value\n    }]);\n    saveTasks([...tasks, {\n      title: taskTitle.current.value,\n      summary: taskSummary.current.value\n    }]);\n  }\n  function deleteTask(index) {\n    var clonedTasks = [...tasks];\n    clonedTasks.splice(index, 1);\n    setTasks(clonedTasks);\n    saveTasks([...clonedTasks]);\n  }\n  function loadTasks() {\n    let loadedTasks = localStorage.getItem(\"tasks\");\n    let tasks = JSON.parse(loadedTasks);\n    if (tasks) {\n      setTasks(tasks);\n    }\n  }\n  function saveTasks(tasks) {\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n  }\n  useEffect(() => {\n    loadTasks();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(InnerLayout, {\n    children: [/*#__PURE__*/_jsxDEV(Modal, {\n      opened: opened,\n      size: \"md\",\n      title: \"New Task\",\n      withCloseButton: false,\n      onClose: () => {\n        setOpened(false);\n      },\n      centered: true,\n      children: [/*#__PURE__*/_jsxDEV(TextInput, {\n        mt: \"md\",\n        ref: taskTitle,\n        placeholder: \"Task Title\",\n        required: true,\n        label: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n        ref: taskSummary,\n        mt: \"md\",\n        placeholder: \"Task Summary\",\n        label: \"Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Group, {\n        mt: \"md\",\n        position: \"apart\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            setOpened(false);\n          },\n          variant: \"subtle\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            createTask();\n            setOpened(false);\n          },\n          children: \"Create Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      size: 550,\n      my: 40,\n      children: [/*#__PURE__*/_jsxDEV(Group, {\n        position: \"apart\",\n        children: /*#__PURE__*/_jsxDEV(Title, {\n          sx: theme => ({\n            fontFamily: `Greycliff CF, ${theme.fontFamily}`,\n            fontWeight: 900\n          }),\n          children: \"My Tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), tasks.length > 0 ? tasks.map((task, index) => {\n        if (task.title) {\n          return /*#__PURE__*/_jsxDEV(Card, {\n            withBorder: true,\n            mt: \"sm\",\n            children: [/*#__PURE__*/_jsxDEV(Group, {\n              position: \"apart\",\n              children: [/*#__PURE__*/_jsxDEV(Text, {\n                weight: \"bold\",\n                children: task.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(ActionIcon, {\n                onClick: () => {\n                  deleteTask(index);\n                },\n                color: \"red\",\n                variant: \"transparent\",\n                children: /*#__PURE__*/_jsxDEV(IconTrash, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Text, {\n              color: \"dimmed\",\n              size: \"md\",\n              mt: \"sm\",\n              children: task.summary ? task.summary : \"No summary was provided for this task\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 17\n          }, this);\n        }\n      }) : /*#__PURE__*/_jsxDEV(Text, {\n        size: \"lg\",\n        mt: \"md\",\n        color: \"dimmed\",\n        children: \"You have no tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => {\n          setOpened(true);\n        },\n        fullWidth: true,\n        mt: \"md\",\n        children: \"New Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n_s(Todolist, \"BWrLrFBsVO8VHgOXizqO/nsr1LY=\", false, function () {\n  return [useLocalStorage];\n});\n_c = Todolist;\nconst TodolistStyled = styled.div`\n  display: flex;\n  overflow: auto;\n`;\nexport default Todolist;\nvar _c;\n$RefreshReg$(_c, \"Todolist\");","map":{"version":3,"names":["styled","InnerLayout","Button","Container","Text","Title","Modal","TextInput","Group","Card","ActionIcon","Code","useState","useRef","useEffect","MoonStars","Sun","IconTrash","useLocalStorage","Todolist","tasks","setTasks","opened","setOpened","colorScheme","setColorScheme","key","defaultValue","getInitialValueInEffect","taskTitle","taskSummary","createTask","title","current","value","summary","saveTasks","deleteTask","index","clonedTasks","splice","loadTasks","loadedTasks","localStorage","getItem","JSON","parse","setItem","stringify","theme","fontFamily","fontWeight","length","map","task","TodolistStyled","div"],"sources":["/Users/tnkuseija/Desktop/poche/frontend/src/Components/Todo/Todolist.js"],"sourcesContent":["import styled from \"styled-components\";\nimport { InnerLayout } from \"../../styles/Layouts\";\nimport {\n  Button,\n  Container,\n  Text,\n  Title,\n  Modal,\n  TextInput,\n  Group,\n  Card,\n  ActionIcon,\n  Code,\n} from \"@mantine/core\";\nimport { useState, useRef, useEffect } from \"react\";\nimport { MoonStars, Sun, IconTrash } from \"@tabler/icons-react\";\nimport { useLocalStorage } from \"@mantine/hooks\";\n\nfunction Todolist() {\n  const [tasks, setTasks] = useState([]);\n  const [opened, setOpened] = useState(false);\n\n  const [colorScheme, setColorScheme] = useLocalStorage({\n    key: \"mantine-color-scheme\",\n    defaultValue: \"light\",\n    getInitialValueInEffect: true,\n  });\n\n  const taskTitle = useRef(\"\");\n  const taskSummary = useRef(\"\");\n\n  function createTask() {\n    setTasks([\n      ...tasks,\n      {\n        title: taskTitle.current.value,\n        summary: taskSummary.current.value,\n      },\n    ]);\n\n    saveTasks([\n      ...tasks,\n      {\n        title: taskTitle.current.value,\n        summary: taskSummary.current.value,\n      },\n    ]);\n  }\n  function deleteTask(index) {\n    var clonedTasks = [...tasks];\n\n    clonedTasks.splice(index, 1);\n\n    setTasks(clonedTasks);\n\n    saveTasks([...clonedTasks]);\n  }\n\n  function loadTasks() {\n    let loadedTasks = localStorage.getItem(\"tasks\");\n\n    let tasks = JSON.parse(loadedTasks);\n\n    if (tasks) {\n      setTasks(tasks);\n    }\n  }\n\n  function saveTasks(tasks) {\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n  }\n\n  useEffect(() => {\n    loadTasks();\n  }, []);\n\n  return (\n    <InnerLayout>\n      <Modal\n        opened={opened}\n        size={\"md\"}\n        title={\"New Task\"}\n        withCloseButton={false}\n        onClose={() => {\n          setOpened(false);\n        }}\n        centered\n      >\n        <TextInput\n          mt={\"md\"}\n          ref={taskTitle}\n          placeholder={\"Task Title\"}\n          required\n          label={\"Title\"}\n        />\n        <TextInput\n          ref={taskSummary}\n          mt={\"md\"}\n          placeholder={\"Task Summary\"}\n          label={\"Summary\"}\n        />\n        <Group mt={\"md\"} position={\"apart\"}>\n          <Button\n            onClick={() => {\n              setOpened(false);\n            }}\n            variant={\"subtle\"}\n          >\n            Cancel\n          </Button>\n          <Button\n            onClick={() => {\n              createTask();\n              setOpened(false);\n            }}\n          >\n            Create Task\n          </Button>\n        </Group>\n      </Modal>\n      <Container size={550} my={40}>\n        <Group position={\"apart\"}>\n          <Title\n            sx={(theme) => ({\n              fontFamily: `Greycliff CF, ${theme.fontFamily}`,\n              fontWeight: 900,\n            })}\n          >\n            My Tasks\n          </Title>\n        </Group>\n        {tasks.length > 0 ? (\n          tasks.map((task, index) => {\n            if (task.title) {\n              return (\n                <Card withBorder key={index} mt={\"sm\"}>\n                  <Group position={\"apart\"}>\n                    <Text weight={\"bold\"}>{task.title}</Text>\n                    <ActionIcon\n                      onClick={() => {\n                        deleteTask(index);\n                      }}\n                      color={\"red\"}\n                      variant={\"transparent\"}\n                    >\n                      <IconTrash />\n                    </ActionIcon>\n                  </Group>\n                  <Text color={\"dimmed\"} size={\"md\"} mt={\"sm\"}>\n                    {task.summary\n                      ? task.summary\n                      : \"No summary was provided for this task\"}\n                  </Text>\n                </Card>\n              );\n            }\n          })\n        ) : (\n          <Text size={\"lg\"} mt={\"md\"} color={\"dimmed\"}>\n            You have no tasks\n          </Text>\n        )}\n        <Button\n          onClick={() => {\n            setOpened(true);\n          }}\n          fullWidth\n          mt={\"md\"}\n        >\n          New Task\n        </Button>\n      </Container>\n    </InnerLayout>\n  );\n}\n\nconst TodolistStyled = styled.div`\n  display: flex;\n  overflow: auto;\n`;\n\nexport default Todolist;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}