{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { forwardRef } from 'react';\nimport '@mantine/hooks';\nimport 'clsx';\nimport '../../../core/MantineProvider/Mantine.context.mjs';\nimport '../../../core/MantineProvider/default-theme.mjs';\nimport '../../../core/MantineProvider/MantineProvider.mjs';\nimport '../../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport '../../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport { Box } from '../../../core/Box/Box.mjs';\nimport '../../../core/DirectionProvider/DirectionProvider.mjs';\nimport { useSliderContext } from '../Slider.context.mjs';\nconst SliderRoot = forwardRef((_ref, ref) => {\n  let {\n    size,\n    disabled,\n    variant,\n    color,\n    thumbSize,\n    radius,\n    ...others\n  } = _ref;\n  const {\n    getStyles\n  } = useSliderContext();\n  return /* @__PURE__ */jsx(Box, {\n    tabIndex: -1,\n    variant,\n    size,\n    ref,\n    ...getStyles(\"root\"),\n    ...others\n  });\n});\nSliderRoot.displayName = \"@mantine/core/SliderRoot\";\nexport { SliderRoot };","map":{"version":3,"mappings":";;;;;;;;;;;;;;AAOY,MAACA,UAAU,GAAGC,UAAU,CAClC,OAAmEC,GAAG,KAAK;EAAA,IAA1E;IAAEC,IAAI;IAAEC,QAAQ;IAAEC,OAAO;IAAEC,KAAK;IAAEC,SAAS;IAAEC,MAAM;IAAE,GAAGC;EAAQ;EAC/D,MAAM;IAAEC;EAAS,CAAE,GAAGC,gBAAgB,EAAE;EACxC,sBAAuBC,GAAG,CACxBC,GAAG,EACH;IACEC,QAAQ,EAAE,CAAC,CAAC;IACZT,OAAO;IACPF,IAAI;IACJD,GAAG;IACH,GAAGQ,SAAS,CAAC,MAAM,CAAC;IACpB,GAAGD;EACJ,EACF;AACF,EACD;AACFT,UAAU,CAACe,WAAW,GAAG,0BAA0B","names":["SliderRoot","forwardRef","ref","size","disabled","variant","color","thumbSize","radius","others","getStyles","useSliderContext","jsx","Box","tabIndex","displayName"],"sources":["/Users/tnkuseija/Desktop/poche/frontend/node_modules/@mantine/core/src/components/Slider/SliderRoot/SliderRoot.tsx"],"sourcesContent":["import { forwardRef } from 'react';\nimport {\n  Box,\n  BoxProps,\n  ElementProps,\n  MantineColor,\n  MantineRadius,\n  MantineSize,\n} from '../../../core';\nimport { useSliderContext } from '../Slider.context';\n\nexport interface SliderRootProps extends BoxProps, ElementProps<'div'> {\n  size: MantineSize | (string & {}) | number;\n  children: React.ReactNode;\n  color: MantineColor | undefined;\n  disabled: boolean | undefined;\n  variant?: string;\n  thumbSize: string | number | undefined;\n  radius: MantineRadius | undefined;\n}\n\nexport const SliderRoot = forwardRef<HTMLDivElement, SliderRootProps>(\n  ({ size, disabled, variant, color, thumbSize, radius, ...others }: SliderRootProps, ref) => {\n    const { getStyles } = useSliderContext();\n\n    return (\n      <Box\n        tabIndex={-1}\n        variant={variant}\n        size={size}\n        ref={ref}\n        {...getStyles('root')}\n        {...others}\n      />\n    );\n  }\n);\n\nSliderRoot.displayName = '@mantine/core/SliderRoot';\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}