{"ast":null,"code":"'use client';\n\nimport { jsx, Fragment } from 'react/jsx-runtime';\nimport { Portal } from './Portal.mjs';\nfunction OptionalPortal(_ref) {\n  let {\n    withinPortal = true,\n    children,\n    ...others\n  } = _ref;\n  if (withinPortal) {\n    return /* @__PURE__ */jsx(Portal, {\n      ...others,\n      children\n    });\n  }\n  return /* @__PURE__ */jsx(Fragment, {\n    children\n  });\n}\nOptionalPortal.displayName = \"@mantine/core/OptionalPortal\";\nexport { OptionalPortal };","map":{"version":3,"mappings":";;;;AAGO,SAASA,cAAc,OAA+C;EAAA,IAA9C;IAAEC,YAAY,GAAG,IAAI;IAAEC,QAAQ;IAAE,GAAGC;EAAM,CAAE;EACzE,IAAIF,YAAY,EAAE;IAChB,OAAuB,kBAAG,CAACG,MAAM,EAAE;MAAE,GAAGD,MAAM;MAAED;IAAU,EAAC;EAC5D;EACD,sBAAuBG,GAAG,CAACC,QAAQ,EAAE;IAAEJ;EAAU,EAAC;AACpD;AACAF,cAAc,CAACO,WAAW,GAAG,8BAA8B","names":["OptionalPortal","withinPortal","children","others","Portal","jsx","Fragment","displayName"],"sources":["/Users/tnkuseija/Desktop/poche/frontend/node_modules/@mantine/core/src/components/Portal/OptionalPortal.tsx"],"sourcesContent":["import { Portal, PortalProps } from './Portal';\n\nexport interface OptionalPortalProps extends PortalProps {\n  /** Determines whether children should be rendered inside `<Portal />` */\n  withinPortal?: boolean;\n}\n\nexport function OptionalPortal({ withinPortal = true, children, ...others }: OptionalPortalProps) {\n  if (withinPortal) {\n    return <Portal {...others}>{children}</Portal>;\n  }\n\n  return <>{children}</>;\n}\n\nOptionalPortal.displayName = '@mantine/core/OptionalPortal';\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}