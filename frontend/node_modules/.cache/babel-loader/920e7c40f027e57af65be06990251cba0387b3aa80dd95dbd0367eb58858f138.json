{"ast":null,"code":"'use client';\n\nimport { jsx, Fragment, jsxs } from 'react/jsx-runtime';\nimport 'react';\nimport '@mantine/hooks';\nimport 'clsx';\nimport '../../../core/MantineProvider/Mantine.context.mjs';\nimport '../../../core/MantineProvider/default-theme.mjs';\nimport '../../../core/MantineProvider/MantineProvider.mjs';\nimport '../../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport '../../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport { Box } from '../../../core/Box/Box.mjs';\nimport '../../../core/DirectionProvider/DirectionProvider.mjs';\nimport { Marks } from '../Marks/Marks.mjs';\nimport { useSliderContext } from '../Slider.context.mjs';\nfunction Track(_ref) {\n  let {\n    filled,\n    children,\n    offset,\n    disabled,\n    marksOffset,\n    inverted,\n    containerProps,\n    ...others\n  } = _ref;\n  const {\n    getStyles\n  } = useSliderContext();\n  return /* @__PURE__ */jsx(Fragment, {\n    children: /* @__PURE__ */jsx(Box, {\n      ...getStyles(\"trackContainer\"),\n      mod: {\n        disabled\n      },\n      ...containerProps,\n      children: /* @__PURE__ */jsxs(Box, {\n        ...getStyles(\"track\"),\n        mod: {\n          inverted,\n          disabled\n        },\n        children: [/* @__PURE__ */jsx(Box, {\n          mod: {\n            inverted,\n            disabled\n          },\n          __vars: {\n            \"--slider-bar-width\": `calc(${filled}% + var(--slider-size))`,\n            \"--slider-bar-offset\": `calc(${offset}% - var(--slider-size))`\n          },\n          ...getStyles(\"bar\")\n        }), children, /* @__PURE__ */jsx(Marks, {\n          ...others,\n          offset: marksOffset,\n          disabled,\n          inverted\n        })]\n      })\n    })\n  });\n}\nTrack.displayName = \"@mantine/core/SliderTrack\";\nexport { Track };","map":{"version":3,"mappings":";;;;;;;;;;;;;;;AAKO,SAASA,KAAK,OASlB;EAAA,IATmB;IACpBC,MAAM;IACNC,QAAQ;IACRC,MAAM;IACNC,QAAQ;IACRC,WAAW;IACXC,QAAQ;IACRC,cAAc;IACd,GAAGC;EACL,CAAC;EACC,MAAM;IAAEC;EAAS,CAAE,GAAGC,gBAAgB,EAAE;EACxC,sBAAuBC,GAAG,CAACC,QAAQ,EAAE;IAAEV,QAAQ,EAAkB,kBAAG,CAACW,GAAG,EAAE;MAAE,GAAGJ,SAAS,CAAC,gBAAgB,CAAC;MAAEK,GAAG,EAAE;QAAEV;MAAU;MAAE,GAAGG,cAAc;MAAEL,QAAQ,EAAkB,mBAAI,CAACW,GAAG,EAAE;QAAE,GAAGJ,SAAS,CAAC,OAAO,CAAC;QAAEK,GAAG,EAAE;UAAER,QAAQ;UAAEF;QAAQ,CAAE;QAAEF,QAAQ,EAAE,CACxP,eAAoBS,GAAG,CACjBE,GAAG,EACH;UACEC,GAAG,EAAE;YAAER,QAAQ;YAAEF;UAAU;UAC3BW,MAAM,EAAE;YACN,oBAAoB,EAAG,QAAOd,MAAO,yBAAwB;YAC7D,qBAAqB,EAAG,QAAOE,MAAO;UACvC;UACD,GAAGM,SAAS,CAAC,KAAK;QACnB,EACF,EACDP,QAAQ,EACZ,eAAoBS,GAAG,CAACK,KAAK,EAAE;UAAE,GAAGR,MAAM;UAAEL,MAAM,EAAEE,WAAW;UAAED,QAAQ;UAAEE;QAAQ,CAAE,CAAC;MACnF,CAAE;IAAC,CAAE;EAAC,CAAE,CAAC;AACZ;AACAN,KAAK,CAACiB,WAAW,GAAG,2BAA2B","names":["Track","filled","children","offset","disabled","marksOffset","inverted","containerProps","others","getStyles","useSliderContext","jsx","Fragment","Box","mod","__vars","Marks","displayName"],"sources":["/Users/tnkuseija/Desktop/poche/frontend/node_modules/@mantine/core/src/components/Slider/Track/Track.tsx"],"sourcesContent":["import { Box } from '../../../core';\nimport { Marks } from '../Marks/Marks';\nimport { useSliderContext } from '../Slider.context';\n\nexport interface TrackProps {\n  filled: number;\n  offset?: number;\n  marksOffset?: number;\n  marks: { value: number; label?: React.ReactNode }[] | undefined;\n  min: number;\n  max: number;\n  value: number;\n  children: React.ReactNode;\n  disabled: boolean | undefined;\n  inverted: boolean | undefined;\n  containerProps?: React.PropsWithRef<React.ComponentProps<'div'>>;\n}\n\nexport function Track({\n  filled,\n  children,\n  offset,\n  disabled,\n  marksOffset,\n  inverted,\n  containerProps,\n  ...others\n}: TrackProps) {\n  const { getStyles } = useSliderContext();\n\n  return (\n    <>\n      <Box {...getStyles('trackContainer')} mod={{ disabled }} {...containerProps}>\n        <Box {...getStyles('track')} mod={{ inverted, disabled }}>\n          <Box\n            mod={{ inverted, disabled }}\n            __vars={{\n              '--slider-bar-width': `calc(${filled}% + var(--slider-size))`,\n              '--slider-bar-offset': `calc(${offset}% - var(--slider-size))`,\n            }}\n            {...getStyles('bar')}\n          />\n\n          {children}\n\n          <Marks {...others} offset={marksOffset} disabled={disabled} inverted={inverted} />\n        </Box>\n      </Box>\n    </>\n  );\n}\n\nTrack.displayName = '@mantine/core/SliderTrack';\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}