{"ast":null,"code":"'use client';\n\nimport { useRef } from 'react';\nimport { useForceUpdate } from '../use-force-update/use-force-update.mjs';\nfunction useSet(values) {\n  const setRef = useRef(new Set(values));\n  const forceUpdate = useForceUpdate();\n  setRef.current.add = function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    const res = Set.prototype.add.apply(setRef.current, args);\n    forceUpdate();\n    return res;\n  };\n  setRef.current.clear = function () {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n    Set.prototype.clear.apply(setRef.current, args);\n    forceUpdate();\n  };\n  setRef.current.delete = function () {\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n    const res = Set.prototype.delete.apply(setRef.current, args);\n    forceUpdate();\n    return res;\n  };\n  return setRef.current;\n}\nexport { useSet };","map":{"version":3,"mappings":";;;;AAGO,SAASA,MAAM,CAACC,MAAM,EAAE;EAC7B,MAAMC,MAAM,GAAGC,MAAM,CAAC,IAAIC,GAAG,CAACH,MAAM,CAAC,CAAC;EACtC,MAAMI,WAAW,GAAGC,cAAc,EAAE;EACpCJ,MAAM,CAACK,OAAO,CAACC,GAAG,GAAG,YAAa;IAAA,kCAATC,IAAI;MAAJA,IAAI;IAAA;IAC3B,MAAMC,GAAG,GAAGN,GAAG,CAACO,SAAS,CAACH,GAAG,CAACI,KAAK,CAACV,MAAM,CAACK,OAAO,EAAEE,IAAI,CAAC;IACzDJ,WAAW,EAAE;IACb,OAAOK,GAAG;EACd,CAAG;EACDR,MAAM,CAACK,OAAO,CAACM,KAAK,GAAG,YAAa;IAAA,mCAATJ,IAAI;MAAJA,IAAI;IAAA;IAC7BL,GAAG,CAACO,SAAS,CAACE,KAAK,CAACD,KAAK,CAACV,MAAM,CAACK,OAAO,EAAEE,IAAI,CAAC;IAC/CJ,WAAW,EAAE;EACjB,CAAG;EACDH,MAAM,CAACK,OAAO,CAACO,MAAM,GAAG,YAAa;IAAA,mCAATL,IAAI;MAAJA,IAAI;IAAA;IAC9B,MAAMC,GAAG,GAAGN,GAAG,CAACO,SAAS,CAACG,MAAM,CAACF,KAAK,CAACV,MAAM,CAACK,OAAO,EAAEE,IAAI,CAAC;IAC5DJ,WAAW,EAAE;IACb,OAAOK,GAAG;EACd,CAAG;EACD,OAAOR,MAAM,CAACK,OAAO;AACvB","names":["useSet","values","setRef","useRef","Set","forceUpdate","useForceUpdate","current","add","args","res","prototype","apply","clear","delete"],"sources":["/Users/tnkuseija/Desktop/poche/frontend/node_modules/@mantine/hooks/src/use-set/use-set.ts"],"sourcesContent":["import { useRef } from 'react';\nimport { useForceUpdate } from '../use-force-update/use-force-update';\n\nexport function useSet<T>(values?: T[]): Set<T> {\n  const setRef = useRef(new Set(values));\n  const forceUpdate = useForceUpdate();\n\n  setRef.current.add = (...args) => {\n    const res = Set.prototype.add.apply(setRef.current, args);\n    forceUpdate();\n\n    return res;\n  };\n\n  setRef.current.clear = (...args) => {\n    Set.prototype.clear.apply(setRef.current, args);\n    forceUpdate();\n  };\n\n  setRef.current.delete = (...args) => {\n    const res = Set.prototype.delete.apply(setRef.current, args);\n    forceUpdate();\n\n    return res;\n  };\n\n  return setRef.current;\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}