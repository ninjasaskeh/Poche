{"ast":null,"code":"var _jsxFileName = \"/Users/tnkuseija/Desktop/poche/frontend/src/Components/Todo/Todolist.js\",\n  _s = $RefreshSig$();\nimport { useState, useRef, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Todolist() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const taskTitle = useRef(\"\");\n  const taskSummary = useRef(\"\");\n  function createTask() {\n    if (!taskTitle.current.value) return; // Prevent creating empty tasks\n    const newTask = {\n      title: taskTitle.current.value,\n      summary: taskSummary.current.value || \"No summary\"\n    };\n    setTasks([...tasks, newTask]);\n    saveTasks([...tasks, newTask]);\n    taskTitle.current.value = \"\";\n    taskSummary.current.value = \"\";\n    setIsModalOpen(false);\n  }\n  function deleteTask(index) {\n    const updatedTasks = [...tasks];\n    updatedTasks.splice(index, 1);\n    setTasks(updatedTasks);\n    saveTasks(updatedTasks);\n  }\n  function loadTasks() {\n    const loadedTasks = localStorage.getItem(\"tasks\");\n    const parsedTasks = JSON.parse(loadedTasks);\n    if (parsedTasks) {\n      setTasks(parsedTasks);\n    }\n  }\n  function saveTasks(tasks) {\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n  }\n  useEffect(() => {\n    loadTasks();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(StyledTodolist, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"group\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"title\",\n            children: \"My Tasks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), tasks.length > 0 ? tasks.map((task, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: task.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                deleteTask(index);\n              },\n              className: \"delete-button\",\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"summary\",\n            children: task.summary\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"no-tasks-message\",\n          children: \"You have no tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"submit-btn\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsModalOpen(true),\n        children: \"New Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          ref: taskTitle,\n          placeholder: \"Task Title\",\n          required: true,\n          className: \"text-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          ref: taskSummary,\n          placeholder: \"Task Summary\",\n          className: \"text-area\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setIsModalOpen(false);\n            },\n            className: \"cancel-button\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: createTask,\n            className: \"create-button\",\n            children: \"Create Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(Todolist, \"5tOygiJN93pqkExqjfds48g37f4=\");\n_c = Todolist;\nconst StyledTodolist = styled.div`\n  .container {\n    background-color: #fff;\n    border-radius: 5px;\n    box-shadow: 0px 1px 15px rgba(0, 0, 0, 0.06);\n    padding: 1rem;\n    .group {\n      margin-bottom: 1rem;\n    }\n    .title {\n      font-size: 24px;\n      font-weight: bold;\n    }\n    .card {\n      margin-bottom: 1rem;\n      .card-content {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        button {\n          background-color: transparent;\n          border: none;\n          cursor: pointer;\n          color: red;\n          font-size: 16px;\n        }\n      }\n      .summary {\n        color: rgba(34, 34, 96, 0.9);\n        font-size: 16px;\n      }\n    }\n    .no-tasks-message {\n      color: rgba(34, 34, 96, 0.9);\n      font-size: 18px;\n    }\n  }\n  .modal {\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-color: rgba(0, 0, 0, 0.5);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    z-index: 999;\n    .modal-content {\n      background-color: #fff;\n      padding: 1rem;\n      border-radius: 5px;\n      box-shadow: 0px 1px 15px rgba(0, 0, 0, 0.2);\n      .text-input,\n      .text-area {\n        width: 100%;\n        margin-bottom: 0.5rem;\n        padding: 0.5rem;\n        border-radius: 5px;\n        border: 1px solid #ccc;\n        resize: vertical;\n      }\n      .button-group {\n        display: flex;\n        justify-content: flex-end;\n        button {\n          margin-left: 0.5rem;\n          cursor: pointer;\n          &:first-child {\n            margin-left: 0;\n          }\n        }\n      }\n    }\n  }\n  .submit-btn {\n    display: flex;\n    justify-content: flex-end;\n    margin-top: 1rem;\n    button {\n      background-color: #4caf50;\n      border: none;\n      color: #fff;\n      padding: 0.5rem 1rem;\n      border-radius: 5px;\n      cursor: pointer;\n      transition: background-color 0.3s ease;\n      &:hover {\n        background-color: #45a049;\n      }\n    }\n  }\n`;\n_c2 = StyledTodolist;\nexport default Todolist;\nvar _c, _c2;\n$RefreshReg$(_c, \"Todolist\");\n$RefreshReg$(_c2, \"StyledTodolist\");","map":{"version":3,"names":["useState","useRef","useEffect","styled","Todolist","tasks","setTasks","isModalOpen","setIsModalOpen","taskTitle","taskSummary","createTask","current","value","newTask","title","summary","saveTasks","deleteTask","index","updatedTasks","splice","loadTasks","loadedTasks","localStorage","getItem","parsedTasks","JSON","parse","setItem","stringify","length","map","task","StyledTodolist","div"],"sources":["/Users/tnkuseija/Desktop/poche/frontend/src/Components/Todo/Todolist.js"],"sourcesContent":["import { useState, useRef, useEffect } from \"react\";\nimport styled from \"styled-components\";\n\nfunction Todolist() {\n  const [tasks, setTasks] = useState([]);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const taskTitle = useRef(\"\");\n  const taskSummary = useRef(\"\");\n\n  function createTask() {\n    if (!taskTitle.current.value) return; // Prevent creating empty tasks\n    const newTask = {\n      title: taskTitle.current.value,\n      summary: taskSummary.current.value || \"No summary\",\n    };\n    setTasks([...tasks, newTask]);\n    saveTasks([...tasks, newTask]);\n    taskTitle.current.value = \"\";\n    taskSummary.current.value = \"\";\n    setIsModalOpen(false);\n  }\n\n  function deleteTask(index) {\n    const updatedTasks = [...tasks];\n    updatedTasks.splice(index, 1);\n    setTasks(updatedTasks);\n    saveTasks(updatedTasks);\n  }\n\n  function loadTasks() {\n    const loadedTasks = localStorage.getItem(\"tasks\");\n    const parsedTasks = JSON.parse(loadedTasks);\n    if (parsedTasks) {\n      setTasks(parsedTasks);\n    }\n  }\n\n  function saveTasks(tasks) {\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n  }\n\n  useEffect(() => {\n    loadTasks();\n  }, []);\n\n  return (\n    <>\n      <StyledTodolist>\n        <div className=\"container\">\n          <div className=\"group\">\n            <h2 className=\"title\">My Tasks</h2>\n          </div>\n          {tasks.length > 0 ? (\n            tasks.map((task, index) => (\n              <div className=\"card\" key={index}>\n                <div className=\"card-content\">\n                  <strong>{task.title}</strong>\n                  <button\n                    onClick={() => {\n                      deleteTask(index);\n                    }}\n                    className=\"delete-button\"\n                  >\n                    Delete\n                  </button>\n                </div>\n                <p className=\"summary\">{task.summary}</p>\n              </div>\n            ))\n          ) : (\n            <p className=\"no-tasks-message\">You have no tasks</p>\n          )}\n        </div>\n      </StyledTodolist>\n      <div className=\"submit-btn\">\n        <button onClick={() => setIsModalOpen(true)}>New Task</button>\n      </div>\n      {isModalOpen && (\n        <div className=\"modal\">\n          <div className=\"modal-content\">\n            <input\n              type=\"text\"\n              ref={taskTitle}\n              placeholder=\"Task Title\"\n              required\n              className=\"text-input\"\n            />\n            <textarea\n              ref={taskSummary}\n              placeholder=\"Task Summary\"\n              className=\"text-area\"\n            ></textarea>\n            <div className=\"button-group\">\n              <button\n                onClick={() => {\n                  setIsModalOpen(false);\n                }}\n                className=\"cancel-button\"\n              >\n                Cancel\n              </button>\n              <button onClick={createTask} className=\"create-button\">\n                Create Task\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </>\n  );\n}\n\nconst StyledTodolist = styled.div`\n  .container {\n    background-color: #fff;\n    border-radius: 5px;\n    box-shadow: 0px 1px 15px rgba(0, 0, 0, 0.06);\n    padding: 1rem;\n    .group {\n      margin-bottom: 1rem;\n    }\n    .title {\n      font-size: 24px;\n      font-weight: bold;\n    }\n    .card {\n      margin-bottom: 1rem;\n      .card-content {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        button {\n          background-color: transparent;\n          border: none;\n          cursor: pointer;\n          color: red;\n          font-size: 16px;\n        }\n      }\n      .summary {\n        color: rgba(34, 34, 96, 0.9);\n        font-size: 16px;\n      }\n    }\n    .no-tasks-message {\n      color: rgba(34, 34, 96, 0.9);\n      font-size: 18px;\n    }\n  }\n  .modal {\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-color: rgba(0, 0, 0, 0.5);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    z-index: 999;\n    .modal-content {\n      background-color: #fff;\n      padding: 1rem;\n      border-radius: 5px;\n      box-shadow: 0px 1px 15px rgba(0, 0, 0, 0.2);\n      .text-input,\n      .text-area {\n        width: 100%;\n        margin-bottom: 0.5rem;\n        padding: 0.5rem;\n        border-radius: 5px;\n        border: 1px solid #ccc;\n        resize: vertical;\n      }\n      .button-group {\n        display: flex;\n        justify-content: flex-end;\n        button {\n          margin-left: 0.5rem;\n          cursor: pointer;\n          &:first-child {\n            margin-left: 0;\n          }\n        }\n      }\n    }\n  }\n  .submit-btn {\n    display: flex;\n    justify-content: flex-end;\n    margin-top: 1rem;\n    button {\n      background-color: #4caf50;\n      border: none;\n      color: #fff;\n      padding: 0.5rem 1rem;\n      border-radius: 5px;\n      cursor: pointer;\n      transition: background-color 0.3s ease;\n      &:hover {\n        background-color: #45a049;\n      }\n    }\n  }\n`;\n\nexport default Todolist;\n"],"mappings":"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ACf,WAAW,EAAC,YAAY;UACxB,QAAQ;UACR,SAAS,EAAC;QAAY;UAAA;UAAA;UAAA;QAAA,QACtB,eACF;UACE,GAAG,EAAEC,WAAY;UACjB,WAAW,EAAC,cAAc;UAC1B,SAAS,EAAC;QAAW;UAAA;UAAA;UAAA;QAAA,QACX,eACZ;UAAK,SAAS,EAAC,cAAc;UAAA,wBAC3B;YACE,OAAO,EAAE,MAAM;cACbF,cAAc,CAAC,KAAK,CAAC;YACvB,CAAE;YACF,SAAS,EAAC,eAAe;YAAA,UAC1B;UAED;YAAA;YAAA;YAAA;UAAA,QAAS,eACT;YAAQ,OAAO,EAAEG,UAAW;YAAC,SAAS,EAAC,eAAe;YAAA,UAAC;UAEvD;YAAA;YAAA;YAAA;UAAA,QAAS;QAAA;UAAA;UAAA;UAAA;QAAA,QACL;MAAA;QAAA;QAAA;QAAA;MAAA;IACF;MAAA;MAAA;MAAA;IAAA,QAET;EAAA,gBACA;AAEP;AAAC,GA3GQP,QAAQ;AAAA,KAARA,QAAQ;AA6GjB,MAAM8B,cAAc,GAAG/B,MAAM,CAACgC,GAAI;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAC,MA5FID,cAAc;AA8FpB,eAAe9B,QAAQ;AAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}