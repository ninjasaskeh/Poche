{"ast":null,"code":"'use client';\n\nimport { useFloating, offset, shift, limitShift, flip, inline, arrow, size } from '@floating-ui/react';\nimport { useUncontrolled, useDidUpdate } from '@mantine/hooks';\nimport 'react';\nimport { useFloatingAutoUpdate } from '../Floating/use-floating-auto-update.mjs';\nimport '../Floating/FloatingArrow/FloatingArrow.mjs';\nfunction getDefaultMiddlewares(middlewares) {\n  if (middlewares === void 0) {\n    return {\n      shift: true,\n      flip: true\n    };\n  }\n  const result = {\n    ...middlewares\n  };\n  if (middlewares.shift === void 0) {\n    result.shift = true;\n  }\n  if (middlewares.flip === void 0) {\n    result.flip = true;\n  }\n  return result;\n}\nfunction getPopoverMiddlewares(options, getFloating) {\n  const middlewaresOptions = getDefaultMiddlewares(options.middlewares);\n  const middlewares = [offset(options.offset)];\n  if (middlewaresOptions.shift) {\n    middlewares.push(shift(typeof middlewaresOptions.shift === \"boolean\" ? {\n      limiter: limitShift(),\n      padding: 5\n    } : {\n      limiter: limitShift(),\n      padding: 5,\n      ...middlewaresOptions.shift\n    }));\n  }\n  if (middlewaresOptions.flip) {\n    middlewares.push(typeof middlewaresOptions.flip === \"boolean\" ? flip() : flip(middlewaresOptions.flip));\n  }\n  if (middlewaresOptions.inline) {\n    middlewares.push(typeof middlewaresOptions.inline === \"boolean\" ? inline() : inline(middlewaresOptions.inline));\n  }\n  middlewares.push(arrow({\n    element: options.arrowRef,\n    padding: options.arrowOffset\n  }));\n  if (middlewaresOptions.size || options.width === \"target\") {\n    middlewares.push(size({\n      ...(typeof middlewaresOptions.size === \"boolean\" ? {} : middlewaresOptions.size),\n      apply(_ref) {\n        let {\n          rects,\n          availableWidth,\n          availableHeight\n        } = _ref;\n        const floating = getFloating();\n        const styles = floating.refs.floating.current?.style ?? {};\n        if (middlewaresOptions.size) {\n          Object.assign(styles, {\n            maxWidth: `${availableWidth}px`,\n            maxHeight: `${availableHeight}px`\n          });\n        }\n        if (options.width === \"target\") {\n          Object.assign(styles, {\n            width: `${rects.reference.width}px`\n          });\n        }\n      }\n    }));\n  }\n  return middlewares;\n}\nfunction usePopover(options) {\n  const [_opened, setOpened] = useUncontrolled({\n    value: options.opened,\n    defaultValue: options.defaultOpened,\n    finalValue: false,\n    onChange: options.onChange\n  });\n  const onClose = () => {\n    if (_opened) {\n      options.onClose?.();\n      setOpened(false);\n    }\n  };\n  const onToggle = () => {\n    if (_opened) {\n      options.onClose?.();\n      setOpened(false);\n    } else {\n      options.onOpen?.();\n      setOpened(true);\n    }\n  };\n  const floating = useFloating({\n    strategy: options.strategy,\n    placement: options.position,\n    middleware: getPopoverMiddlewares(options, () => floating)\n  });\n  useFloatingAutoUpdate({\n    opened: options.opened,\n    position: options.position,\n    positionDependencies: options.positionDependencies || [],\n    floating\n  });\n  useDidUpdate(() => {\n    options.onPositionChange?.(floating.placement);\n  }, [floating.placement]);\n  useDidUpdate(() => {\n    if (!options.opened) {\n      options.onClose?.();\n    } else {\n      options.onOpen?.();\n    }\n  }, [options.opened]);\n  return {\n    floating,\n    controlled: typeof options.opened === \"boolean\",\n    opened: _opened,\n    onClose,\n    onToggle\n  };\n}\nexport { usePopover };","map":{"version":3,"mappings":"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","names":["getDefaultMiddlewares","middlewares","shift","flip","result","getPopoverMiddlewares","options","getFloating","middlewaresOptions","offset","push","limiter","limitShift","padding","inline","arrow","element","arrowRef","arrowOffset","size","width","apply","rects","availableWidth","availableHeight","floating","styles","refs","current","style","Object","assign","maxWidth","maxHeight","reference","usePopover","_opened","setOpened","useUncontrolled","value","opened","defaultValue","defaultOpened","finalValue","onChange","onClose","onToggle","onOpen","useFloating","strategy","placement","position","middleware","useFloatingAutoUpdate","positionDependencies","useDidUpdate","onPositionChange","controlled"],"sources":["/Users/tnkuseija/Desktop/poche/frontend/node_modules/@mantine/core/src/components/Popover/use-popover.ts"],"sourcesContent":["import {\n  arrow,\n  flip,\n  inline,\n  limitShift,\n  Middleware,\n  offset,\n  shift,\n  size,\n  useFloating,\n  UseFloatingReturn,\n} from '@floating-ui/react';\nimport { useDidUpdate, useUncontrolled } from '@mantine/hooks';\nimport {\n  FloatingAxesOffsets,\n  FloatingPosition,\n  FloatingStrategy,\n  useFloatingAutoUpdate,\n} from '../Floating';\nimport { PopoverMiddlewares, PopoverWidth } from './Popover.types';\n\ninterface UsePopoverOptions {\n  offset: number | FloatingAxesOffsets;\n  position: FloatingPosition;\n  positionDependencies: any[] | undefined;\n  onPositionChange?: (position: FloatingPosition) => void;\n  opened: boolean | undefined;\n  defaultOpened: boolean | undefined;\n  onChange?: (opened: boolean) => void;\n  onClose?: () => void;\n  onOpen?: () => void;\n  width: PopoverWidth;\n  middlewares: PopoverMiddlewares | undefined;\n  arrowRef: React.RefObject<HTMLDivElement>;\n  arrowOffset: number;\n  strategy?: FloatingStrategy;\n}\n\nfunction getDefaultMiddlewares(middlewares: PopoverMiddlewares | undefined): PopoverMiddlewares {\n  if (middlewares === undefined) {\n    return { shift: true, flip: true };\n  }\n\n  const result = { ...middlewares };\n  if (middlewares.shift === undefined) {\n    result.shift = true;\n  }\n\n  if (middlewares.flip === undefined) {\n    result.flip = true;\n  }\n\n  return result;\n}\n\nfunction getPopoverMiddlewares(\n  options: UsePopoverOptions,\n  getFloating: () => UseFloatingReturn<Element>\n) {\n  const middlewaresOptions = getDefaultMiddlewares(options.middlewares);\n  const middlewares: Middleware[] = [offset(options.offset)];\n\n  if (middlewaresOptions.shift) {\n    middlewares.push(\n      shift(\n        typeof middlewaresOptions.shift === 'boolean'\n          ? { limiter: limitShift(), padding: 5 }\n          : { limiter: limitShift(), padding: 5, ...middlewaresOptions.shift }\n      )\n    );\n  }\n\n  if (middlewaresOptions.flip) {\n    middlewares.push(\n      typeof middlewaresOptions.flip === 'boolean' ? flip() : flip(middlewaresOptions.flip)\n    );\n  }\n\n  if (middlewaresOptions.inline) {\n    middlewares.push(\n      typeof middlewaresOptions.inline === 'boolean' ? inline() : inline(middlewaresOptions.inline)\n    );\n  }\n\n  middlewares.push(arrow({ element: options.arrowRef, padding: options.arrowOffset }));\n\n  if (middlewaresOptions.size || options.width === 'target') {\n    middlewares.push(\n      size({\n        ...(typeof middlewaresOptions.size === 'boolean' ? {} : middlewaresOptions.size),\n        apply({ rects, availableWidth, availableHeight }) {\n          const floating = getFloating();\n          const styles = floating.refs.floating.current?.style ?? {};\n\n          if (middlewaresOptions.size) {\n            Object.assign(styles, {\n              maxWidth: `${availableWidth}px`,\n              maxHeight: `${availableHeight}px`,\n            });\n          }\n\n          if (options.width === 'target') {\n            Object.assign(styles, {\n              width: `${rects.reference.width}px`,\n            });\n          }\n        },\n      })\n    );\n  }\n\n  return middlewares;\n}\n\nexport function usePopover(options: UsePopoverOptions) {\n  const [_opened, setOpened] = useUncontrolled({\n    value: options.opened,\n    defaultValue: options.defaultOpened,\n    finalValue: false,\n    onChange: options.onChange,\n  });\n\n  const onClose = () => {\n    if (_opened) {\n      options.onClose?.();\n      setOpened(false);\n    }\n  };\n\n  const onToggle = () => {\n    if (_opened) {\n      options.onClose?.();\n      setOpened(false);\n    } else {\n      options.onOpen?.();\n      setOpened(true);\n    }\n  };\n\n  const floating: UseFloatingReturn<Element> = useFloating({\n    strategy: options.strategy,\n    placement: options.position,\n    middleware: getPopoverMiddlewares(options, () => floating),\n  });\n\n  useFloatingAutoUpdate({\n    opened: options.opened,\n    position: options.position,\n    positionDependencies: options.positionDependencies || [],\n    floating,\n  });\n\n  useDidUpdate(() => {\n    options.onPositionChange?.(floating.placement);\n  }, [floating.placement]);\n\n  useDidUpdate(() => {\n    if (!options.opened) {\n      options.onClose?.();\n    } else {\n      options.onOpen?.();\n    }\n  }, [options.opened]);\n\n  return {\n    floating,\n    controlled: typeof options.opened === 'boolean',\n    opened: _opened,\n    onClose,\n    onToggle,\n  };\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}