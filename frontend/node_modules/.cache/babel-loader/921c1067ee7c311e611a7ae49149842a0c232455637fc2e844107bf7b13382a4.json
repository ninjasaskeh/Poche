{"ast":null,"code":"'use client';\n\nimport { useRef, useEffect, useMemo } from 'react';\nfunction useCallbackRef(callback) {\n  const callbackRef = useRef(callback);\n  useEffect(() => {\n    callbackRef.current = callback;\n  });\n  return useMemo(() => function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    return callbackRef.current?.(...args);\n  }, []);\n}\nexport { useCallbackRef };","map":{"version":3,"mappings":";;;AAEO,SAASA,cAAc,CAACC,QAAQ,EAAE;EACvC,MAAMC,WAAW,GAAGC,MAAM,CAACF,QAAQ,CAAC;EACpCG,SAAS,CAAC,MAAM;IACdF,WAAW,CAACG,OAAO,GAAGJ,QAAQ;EAClC,CAAG,CAAC;EACF,OAAOK,OAAO,CAAC,MAAM;IAAA,kCAAIC,IAAI;MAAJA,IAAI;IAAA;IAAA,OAAKL,WAAW,CAACG,OAAO,GAAG,GAAGE,IAAI,CAAC;EAAA,GAAE,EAAE,CAAC;AACvE","names":["useCallbackRef","callback","callbackRef","useRef","useEffect","current","useMemo","args"],"sources":["/Users/tnkuseija/Desktop/poche/frontend/node_modules/@mantine/hooks/src/use-callback-ref/use-callback-ref.ts"],"sourcesContent":["import { useEffect, useMemo, useRef } from 'react';\n\nexport function useCallbackRef<T extends (...args: any[]) => any>(callback: T | undefined): T {\n  const callbackRef = useRef(callback);\n\n  useEffect(() => {\n    callbackRef.current = callback;\n  });\n\n  return useMemo(() => ((...args) => callbackRef.current?.(...args)) as T, []);\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}