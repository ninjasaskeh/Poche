{"ast":null,"code":"'use client';\n\nimport { jsx, jsxs } from 'react/jsx-runtime';\nimport { useRef } from 'react';\nimport { findElementAncestor } from '../../core/utils/find-element-ancestor/find-element-ancestor.mjs';\nimport '@mantine/hooks';\nimport 'clsx';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport '../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport '../../core/Box/Box.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nfunction getValuesRange(anchor, value, flatValues) {\n  const anchorIndex = flatValues.indexOf(anchor);\n  const valueIndex = flatValues.indexOf(value);\n  const start = Math.min(anchorIndex, valueIndex);\n  const end = Math.max(anchorIndex, valueIndex);\n  return flatValues.slice(start, end + 1);\n}\nfunction TreeNode(_ref) {\n  let {\n    node,\n    getStyles,\n    rootIndex,\n    controller,\n    expandOnClick,\n    selectOnClick,\n    isSubtree,\n    level = 1,\n    renderNode,\n    flatValues,\n    allowRangeSelection\n  } = _ref;\n  const ref = useRef(null);\n  const nested = (node.children || []).map(child => /* @__PURE__ */jsx(TreeNode, {\n    node: child,\n    flatValues,\n    getStyles,\n    rootIndex: void 0,\n    level: level + 1,\n    controller,\n    expandOnClick,\n    isSubtree: true,\n    renderNode,\n    selectOnClick,\n    allowRangeSelection\n  }, child.value));\n  const handleKeyDown = event => {\n    if (event.nativeEvent.code === \"ArrowRight\") {\n      event.stopPropagation();\n      event.preventDefault();\n      if (controller.expandedState[node.value]) {\n        event.currentTarget.querySelector(\"[role=treeitem]\")?.focus();\n      } else {\n        controller.expand(node.value);\n      }\n    }\n    if (event.nativeEvent.code === \"ArrowLeft\") {\n      event.stopPropagation();\n      event.preventDefault();\n      if (controller.expandedState[node.value] && (node.children || []).length > 0) {\n        controller.collapse(node.value);\n      } else if (isSubtree) {\n        findElementAncestor(event.currentTarget, \"[role=treeitem]\")?.focus();\n      }\n    }\n    if (event.nativeEvent.code === \"ArrowDown\" || event.nativeEvent.code === \"ArrowUp\") {\n      const root = findElementAncestor(event.currentTarget, \"[data-tree-root]\");\n      if (!root) {\n        return;\n      }\n      event.stopPropagation();\n      event.preventDefault();\n      const nodes = Array.from(root.querySelectorAll(\"[role=treeitem]\"));\n      const index = nodes.indexOf(event.currentTarget);\n      if (index === -1) {\n        return;\n      }\n      const nextIndex = event.nativeEvent.code === \"ArrowDown\" ? index + 1 : index - 1;\n      nodes[nextIndex]?.focus();\n    }\n    if (event.nativeEvent.code === \"Space\" && expandOnClick) {\n      event.stopPropagation();\n      event.preventDefault();\n      controller.toggleExpanded(node.value);\n    }\n  };\n  const handleNodeClick = event => {\n    event.stopPropagation();\n    if (allowRangeSelection && event.shiftKey && controller.anchorNode) {\n      controller.setSelectedState(getValuesRange(controller.anchorNode, node.value, flatValues));\n      ref.current?.focus();\n    } else {\n      expandOnClick && controller.toggleExpanded(node.value);\n      selectOnClick && controller.select(node.value);\n      ref.current?.focus();\n    }\n  };\n  const selected = controller.selectedState.includes(node.value);\n  const elementProps = {\n    ...getStyles(\"label\"),\n    onClick: handleNodeClick,\n    \"data-selected\": selected || void 0,\n    \"data-value\": node.value\n  };\n  return /* @__PURE__ */jsxs(\"li\", {\n    ...getStyles(\"node\", {\n      style: {\n        \"--label-offset\": `calc(var(--level-offset) * ${level - 1})`\n      }\n    }),\n    role: \"treeitem\",\n    \"aria-selected\": selected,\n    \"data-selected\": selected || void 0,\n    tabIndex: rootIndex === 0 ? 0 : -1,\n    onKeyDown: handleKeyDown,\n    \"data-level\": level,\n    ref,\n    children: [typeof renderNode === \"function\" ? renderNode({\n      node,\n      level,\n      selected,\n      expanded: controller.expandedState[node.value] || false,\n      hasChildren: Array.isArray(node.children) && node.children.length > 0,\n      elementProps\n    }) : /* @__PURE__ */jsx(\"div\", {\n      ...elementProps,\n      children: node.label\n    }), controller.expandedState[node.value] && nested.length > 0 && /* @__PURE__ */jsx(\"ul\", {\n      role: \"group\",\n      ...getStyles(\"subtree\"),\n      \"data-level\": level,\n      children: nested\n    })]\n  });\n}\nTreeNode.displayName = \"@mantine/core/TreeNode\";\nexport { TreeNode };","map":{"version":3,"mappings":"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","names":["getValuesRange","anchor","value","flatValues","anchorIndex","indexOf","valueIndex","start","Math","min","end","max","slice","TreeNode","node","getStyles","rootIndex","controller","expandOnClick","selectOnClick","isSubtree","level","renderNode","allowRangeSelection","ref","useRef","nested","children","map","child","jsx","handleKeyDown","event","nativeEvent","code","stopPropagation","preventDefault","expandedState","currentTarget","querySelector","focus","expand","length","collapse","findElementAncestor","root","nodes","Array","from","querySelectorAll","index","nextIndex","toggleExpanded","handleNodeClick","shiftKey","anchorNode","setSelectedState","current","select","selected","selectedState","includes","elementProps","onClick","jsxs","style","role","tabIndex","onKeyDown","expanded","hasChildren","isArray","label","displayName"],"sources":["/Users/tnkuseija/Desktop/poche/frontend/node_modules/@mantine/core/src/components/Tree/TreeNode.tsx"],"sourcesContent":["/* eslint-disable jsx-a11y/no-static-element-interactions, jsx-a11y/click-events-have-key-events */\nimport { useRef } from 'react';\nimport { findElementAncestor, GetStylesApi } from '../../core';\nimport type { RenderNode, TreeFactory, TreeNodeData } from './Tree';\nimport type { TreeController } from './use-tree';\n\nfunction getValuesRange(anchor: string, value: string, flatValues: string[]) {\n  const anchorIndex = flatValues.indexOf(anchor);\n  const valueIndex = flatValues.indexOf(value);\n  const start = Math.min(anchorIndex, valueIndex);\n  const end = Math.max(anchorIndex, valueIndex);\n\n  return flatValues.slice(start, end + 1);\n}\n\ninterface TreeNodeProps {\n  node: TreeNodeData;\n  getStyles: GetStylesApi<TreeFactory>;\n  rootIndex: number | undefined;\n  controller: TreeController;\n  expandOnClick: boolean | undefined;\n  flatValues: string[];\n  isSubtree?: boolean;\n  level?: number;\n  renderNode: RenderNode | undefined;\n  selectOnClick: boolean | undefined;\n  allowRangeSelection: boolean | undefined;\n}\n\nexport function TreeNode({\n  node,\n  getStyles,\n  rootIndex,\n  controller,\n  expandOnClick,\n  selectOnClick,\n  isSubtree,\n  level = 1,\n  renderNode,\n  flatValues,\n  allowRangeSelection,\n}: TreeNodeProps) {\n  const ref = useRef<HTMLLIElement>(null);\n  const nested = (node.children || []).map((child) => (\n    <TreeNode\n      key={child.value}\n      node={child}\n      flatValues={flatValues}\n      getStyles={getStyles}\n      rootIndex={undefined}\n      level={level + 1}\n      controller={controller}\n      expandOnClick={expandOnClick}\n      isSubtree\n      renderNode={renderNode}\n      selectOnClick={selectOnClick}\n      allowRangeSelection={allowRangeSelection}\n    />\n  ));\n\n  const handleKeyDown = (event: React.KeyboardEvent) => {\n    if (event.nativeEvent.code === 'ArrowRight') {\n      event.stopPropagation();\n      event.preventDefault();\n\n      if (controller.expandedState[node.value]) {\n        event.currentTarget.querySelector<HTMLLIElement>('[role=treeitem]')?.focus();\n      } else {\n        controller.expand(node.value);\n      }\n    }\n\n    if (event.nativeEvent.code === 'ArrowLeft') {\n      event.stopPropagation();\n      event.preventDefault();\n      if (controller.expandedState[node.value] && (node.children || []).length > 0) {\n        controller.collapse(node.value);\n      } else if (isSubtree) {\n        findElementAncestor(event.currentTarget as HTMLElement, '[role=treeitem]')?.focus();\n      }\n    }\n\n    if (event.nativeEvent.code === 'ArrowDown' || event.nativeEvent.code === 'ArrowUp') {\n      const root = findElementAncestor(event.currentTarget as HTMLElement, '[data-tree-root]');\n\n      if (!root) {\n        return;\n      }\n\n      event.stopPropagation();\n      event.preventDefault();\n      const nodes = Array.from(root.querySelectorAll<HTMLLIElement>('[role=treeitem]'));\n      const index = nodes.indexOf(event.currentTarget as HTMLLIElement);\n\n      if (index === -1) {\n        return;\n      }\n\n      const nextIndex = event.nativeEvent.code === 'ArrowDown' ? index + 1 : index - 1;\n      nodes[nextIndex]?.focus();\n    }\n\n    if (event.nativeEvent.code === 'Space' && expandOnClick) {\n      event.stopPropagation();\n      event.preventDefault();\n      controller.toggleExpanded(node.value);\n    }\n  };\n\n  const handleNodeClick = (event: React.MouseEvent) => {\n    event.stopPropagation();\n\n    if (allowRangeSelection && event.shiftKey && controller.anchorNode) {\n      controller.setSelectedState(getValuesRange(controller.anchorNode, node.value, flatValues));\n      ref.current?.focus();\n    } else {\n      expandOnClick && controller.toggleExpanded(node.value);\n      selectOnClick && controller.select(node.value);\n      ref.current?.focus();\n    }\n  };\n\n  const selected = controller.selectedState.includes(node.value);\n  const elementProps = {\n    ...getStyles('label'),\n    onClick: handleNodeClick,\n    'data-selected': selected || undefined,\n    'data-value': node.value,\n  };\n\n  return (\n    <li\n      {...getStyles('node', {\n        style: { '--label-offset': `calc(var(--level-offset) * ${level - 1})` },\n      })}\n      role=\"treeitem\"\n      aria-selected={selected}\n      data-selected={selected || undefined}\n      tabIndex={rootIndex === 0 ? 0 : -1}\n      onKeyDown={handleKeyDown}\n      data-level={level}\n      ref={ref}\n    >\n      {typeof renderNode === 'function' ? (\n        renderNode({\n          node,\n          level,\n          selected,\n          expanded: controller.expandedState[node.value] || false,\n          hasChildren: Array.isArray(node.children) && node.children.length > 0,\n          elementProps,\n        })\n      ) : (\n        <div {...elementProps}>{node.label}</div>\n      )}\n\n      {controller.expandedState[node.value] && nested.length > 0 && (\n        <ul role=\"group\" {...getStyles('subtree')} data-level={level}>\n          {nested}\n        </ul>\n      )}\n    </li>\n  );\n}\n\nTreeNode.displayName = '@mantine/core/TreeNode';\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}