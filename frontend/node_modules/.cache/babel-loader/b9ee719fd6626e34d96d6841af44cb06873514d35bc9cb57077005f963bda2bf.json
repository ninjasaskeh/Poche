{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { forwardRef, createElement } from 'react';\nimport '@mantine/hooks';\nimport 'clsx';\nimport '../../../core/MantineProvider/Mantine.context.mjs';\nimport '../../../core/MantineProvider/default-theme.mjs';\nimport '../../../core/MantineProvider/MantineProvider.mjs';\nimport '../../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport '../../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport { Box } from '../../../core/Box/Box.mjs';\nimport '../../../core/DirectionProvider/DirectionProvider.mjs';\nimport { ColorSwatch } from '../../ColorSwatch/ColorSwatch.mjs';\nimport { useColorPickerContext } from '../ColorPicker.context.mjs';\nconst Swatches = forwardRef((_ref, ref) => {\n  let {\n    className,\n    datatype,\n    setValue,\n    onChangeEnd,\n    size,\n    focusable,\n    data,\n    swatchesPerRow,\n    ...others\n  } = _ref;\n  const ctx = useColorPickerContext();\n  const colors = data.map((color, index) => /* @__PURE__ */createElement(ColorSwatch, {\n    ...ctx.getStyles(\"swatch\"),\n    unstyled: ctx.unstyled,\n    component: \"button\",\n    type: \"button\",\n    color,\n    key: index,\n    radius: \"sm\",\n    onClick: () => {\n      setValue(color);\n      onChangeEnd?.(color);\n    },\n    \"aria-label\": color,\n    tabIndex: focusable ? 0 : -1,\n    \"data-swatch\": true\n  }));\n  return /* @__PURE__ */jsx(Box, {\n    ...ctx.getStyles(\"swatches\"),\n    ref,\n    ...others,\n    children: colors\n  });\n});\nSwatches.displayName = \"@mantine/core/Swatches\";\nexport { Swatches };","map":{"version":3,"mappings":";;;;;;;;;;;;;;;AAOY,MAACA,QAAQ,GAAGC,UAAU,CAChC,OAUGC,GAAG,KAAK;EAAA,IAVV;IACCC,SAAS;IACTC,QAAQ;IACRC,QAAQ;IACRC,WAAW;IACXC,IAAI;IACJC,SAAS;IACTC,IAAI;IACJC,cAAc;IACd,GAAGC;EACJ;EACC,MAAMC,GAAG,GAAGC,qBAAqB,EAAE;EACnC,MAAMC,MAAM,GAAGL,IAAI,CAACM,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,oBAAqBC,aAAa,CACrEC,WAAW,EACX;IACE,GAAGP,GAAG,CAACQ,SAAS,CAAC,QAAQ,CAAC;IAC1BC,QAAQ,EAAET,GAAG,CAACS,QAAQ;IACtBC,SAAS,EAAE,QAAQ;IACnBC,IAAI,EAAE,QAAQ;IACdP,KAAK;IACLQ,GAAG,EAAEP,KAAK;IACVQ,MAAM,EAAE,IAAI;IACZC,OAAO,EAAE,MAAM;MACbrB,QAAQ,CAACW,KAAK,CAAC;MACfV,WAAW,GAAGU,KAAK,CAAC;IACrB;IACD,YAAY,EAAEA,KAAK;IACnBW,QAAQ,EAAEnB,SAAS,GAAG,CAAC,GAAG,CAAC,CAAC;IAC5B,aAAa,EAAE;EAChB,EACF,CAAC;EACF,sBAAuBoB,GAAG,CAACC,GAAG,EAAE;IAAE,GAAGjB,GAAG,CAACQ,SAAS,CAAC,UAAU,CAAC;IAAElB,GAAG;IAAE,GAAGS,MAAM;IAAEmB,QAAQ,EAAEhB;EAAQ,EAAC;AACpG,EACD;AACFd,QAAQ,CAAC+B,WAAW,GAAG,wBAAwB","names":["Swatches","forwardRef","ref","className","datatype","setValue","onChangeEnd","size","focusable","data","swatchesPerRow","others","ctx","useColorPickerContext","colors","map","color","index","createElement","ColorSwatch","getStyles","unstyled","component","type","key","radius","onClick","tabIndex","jsx","Box","children","displayName"],"sources":["/Users/tnkuseija/Desktop/poche/frontend/node_modules/@mantine/core/src/components/ColorPicker/Swatches/Swatches.tsx"],"sourcesContent":["import { forwardRef } from 'react';\nimport { Box, ElementProps } from '../../../core';\nimport { ColorSwatch } from '../../ColorSwatch';\nimport { useColorPickerContext } from '../ColorPicker.context';\n\nexport interface SwatchesProps extends ElementProps<'div'> {\n  size?: string | number;\n  data: string[];\n  swatchesPerRow?: number;\n  focusable?: boolean;\n  onChangeEnd?: (color: string) => void;\n  setValue: (value: string) => void;\n}\n\nexport const Swatches = forwardRef<HTMLDivElement, SwatchesProps>(\n  (\n    {\n      className,\n      datatype,\n      setValue,\n      onChangeEnd,\n      size,\n      focusable,\n      data,\n      swatchesPerRow,\n      ...others\n    },\n    ref\n  ) => {\n    const ctx = useColorPickerContext()!;\n\n    const colors = data.map((color, index) => (\n      <ColorSwatch\n        {...ctx.getStyles('swatch')}\n        unstyled={ctx.unstyled}\n        component=\"button\"\n        type=\"button\"\n        color={color}\n        key={index}\n        radius=\"sm\"\n        onClick={() => {\n          setValue(color);\n          onChangeEnd?.(color);\n        }}\n        aria-label={color}\n        tabIndex={focusable ? 0 : -1}\n        data-swatch\n      />\n    ));\n\n    return (\n      <Box {...ctx.getStyles('swatches')} ref={ref} {...others}>\n        {colors}\n      </Box>\n    );\n  }\n);\n\nSwatches.displayName = '@mantine/core/Swatches';\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}