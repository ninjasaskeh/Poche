[{"/Users/tnkuseija/Desktop/poche/frontend/src/index.js":"1","/Users/tnkuseija/Desktop/poche/frontend/src/App.js":"2","/Users/tnkuseija/Desktop/poche/frontend/src/styles/GlobalStyle.js":"3","/Users/tnkuseija/Desktop/poche/frontend/src/context/globalContext.js":"4","/Users/tnkuseija/Desktop/poche/frontend/src/styles/Layouts.js":"5","/Users/tnkuseija/Desktop/poche/frontend/src/Components/Navigation/Navigation.js":"6","/Users/tnkuseija/Desktop/poche/frontend/src/Components/Expenses/Expenses.js":"7","/Users/tnkuseija/Desktop/poche/frontend/src/Components/Orb/Orb.js":"8","/Users/tnkuseija/Desktop/poche/frontend/src/Components/Dashboard/Dashboard.js":"9","/Users/tnkuseija/Desktop/poche/frontend/src/Components/Income/Income.js":"10","/Users/tnkuseija/Desktop/poche/frontend/src/Components/Expenses/ExpenseForm.js":"11","/Users/tnkuseija/Desktop/poche/frontend/src/utils/useWindowSize.js":"12","/Users/tnkuseija/Desktop/poche/frontend/src/utils/Icons.js":"13","/Users/tnkuseija/Desktop/poche/frontend/src/utils/menuItems.js":"14","/Users/tnkuseija/Desktop/poche/frontend/src/History/History.js":"15","/Users/tnkuseija/Desktop/poche/frontend/src/Components/Chart/Chart.js":"16","/Users/tnkuseija/Desktop/poche/frontend/src/utils/dateFormat.js":"17","/Users/tnkuseija/Desktop/poche/frontend/src/Components/Button/Button.js":"18","/Users/tnkuseija/Desktop/poche/frontend/src/Components/Income/IncomeForm.js":"19","/Users/tnkuseija/Desktop/poche/frontend/src/Components/Item/IncomeItem.js":"20","/Users/tnkuseija/Desktop/poche/frontend/src/Components/Item/ExpenseItem.js":"21","/Users/tnkuseija/Desktop/poche/frontend/src/Components/Todo/Todolist.js":"22"},{"size":408,"mtime":1711981897621,"results":"23","hashOfConfig":"24"},{"size":1704,"mtime":1714658148112,"results":"25","hashOfConfig":"24"},{"size":1239,"mtime":1711981897621,"results":"26","hashOfConfig":"24"},{"size":2836,"mtime":1711981897616,"results":"27","hashOfConfig":"24"},{"size":238,"mtime":1711981897621,"results":"28","hashOfConfig":"24"},{"size":2718,"mtime":1713936502214,"results":"29","hashOfConfig":"24"},{"size":2217,"mtime":1713884852162,"results":"30","hashOfConfig":"24"},{"size":859,"mtime":1712001634746,"results":"31","hashOfConfig":"24"},{"size":4870,"mtime":1713886002712,"results":"32","hashOfConfig":"24"},{"size":2168,"mtime":1713936383150,"results":"33","hashOfConfig":"24"},{"size":4322,"mtime":1713886695594,"results":"34","hashOfConfig":"24"},{"size":494,"mtime":1711981897621,"results":"35","hashOfConfig":"24"},{"size":1982,"mtime":1714663459549,"results":"36","hashOfConfig":"24"},{"size":444,"mtime":1714663477150,"results":"37","hashOfConfig":"24"},{"size":1488,"mtime":1713886192595,"results":"38","hashOfConfig":"24"},{"size":1517,"mtime":1711983801263,"results":"39","hashOfConfig":"24"},{"size":113,"mtime":1711981897621,"results":"40","hashOfConfig":"24"},{"size":655,"mtime":1711981897614,"results":"41","hashOfConfig":"24"},{"size":4340,"mtime":1713885859282,"results":"42","hashOfConfig":"24"},{"size":3258,"mtime":1713885325882,"results":"43","hashOfConfig":"24"},{"size":3259,"mtime":1713885362810,"results":"44","hashOfConfig":"24"},{"size":8351,"mtime":1715779682113,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},"xpbvnd",{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"49"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"49"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"49"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"49"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"49"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"49"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"49"},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"49"},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"49"},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/tnkuseija/Desktop/poche/frontend/src/index.js",[],[],[],"/Users/tnkuseija/Desktop/poche/frontend/src/App.js",["124","125","126"],[],"import React, { useState, useMemo } from \"react\";\nimport styled from \"styled-components\";\nimport bg from \"./img/bg.png\";\nimport { MainLayout } from \"./styles/Layouts\";\nimport Orb from \"./Components/Orb/Orb\";\nimport Navigation from \"./Components/Navigation/Navigation\";\nimport Dashboard from \"./Components/Dashboard/Dashboard\";\nimport Income from \"./Components/Income/Income\";\nimport Expenses from \"./Components/Expenses/Expenses\";\nimport Todolist from \"./Components/Todo/Todolist\";\nimport { useGlobalContext } from \"./context/globalContext\";\nimport {\n  MantineProvider,\n  ColorSchemeProvider,\n  ColorScheme,\n} from \"@mantine/core\";\n\nfunction App() {\n  const [active, setActive] = useState(1);\n\n  const global = useGlobalContext();\n  console.log(global);\n\n  const displayData = () => {\n    switch (active) {\n      case 1:\n        return <Dashboard />;\n      case 2:\n        return <Income />;\n      case 3:\n        return <Expenses />;\n      case 4:\n        return <Todolist />;\n\n      default:\n        return <Dashboard />;\n    }\n  };\n\n  const orbMemo = useMemo(() => {\n    return <Orb />;\n  }, []);\n\n  return (\n    <AppStyled bg={bg} className=\"App\">\n      {orbMemo}\n      <MainLayout>\n        <Navigation active={active} setActive={setActive} />\n        <main>{displayData()}</main>\n      </MainLayout>\n    </AppStyled>\n  );\n}\n\nconst AppStyled = styled.div`\n  height: 100vh;\n  background-image: url(${(props) => props.bg});\n  position: relative;\n  main {\n    flex: 1;\n    background: rgba(252, 246, 249, 0.78);\n    border: 3px solid #ffffff;\n    backdrop-filter: blur(4.5px);\n    border-radius: 32px;\n    overflow-x: hidden;\n    &::-webkit-scrollbar {\n      width: 0;\n    }\n  }\n`;\n\nexport default App;\n","/Users/tnkuseija/Desktop/poche/frontend/src/styles/GlobalStyle.js",[],[],"/Users/tnkuseija/Desktop/poche/frontend/src/context/globalContext.js",["127","128","129","130"],[],"import React, { useContext, useState } from \"react\"\nimport axios from 'axios'\n\n\nconst BASE_URL = \"http://localhost:5000/api/v1/\";\n\n\nconst GlobalContext = React.createContext()\n\nexport const GlobalProvider = ({children}) => {\n\n    const [incomes, setIncomes] = useState([])\n    const [expenses, setExpenses] = useState([])\n    const [error, setError] = useState(null)\n\n    //calculate incomes\n    const addIncome = async (income) => {\n        const response = await axios.post(`${BASE_URL}add-income`, income)\n            .catch((err) =>{\n                setError(err.response.data.message)\n            })\n        getIncomes()\n    }\n\n    const getIncomes = async () => {\n        const response = await axios.get(`${BASE_URL}get-incomes`)\n        setIncomes(response.data)\n        console.log(response.data)\n    }\n\n    const deleteIncome = async (id) => {\n        const res  = await axios.delete(`${BASE_URL}delete-income/${id}`)\n        getIncomes()\n    }\n\n    const totalIncome = () => {\n        let totalIncome = 0;\n        incomes.forEach((income) =>{\n            totalIncome = totalIncome + income.amount\n        })\n\n        return totalIncome;\n    }\n\n\n    //calculate incomes\n    const addExpense = async (income) => {\n        const response = await axios.post(`${BASE_URL}add-expense`, income)\n            .catch((err) =>{\n                setError(err.response.data.message)\n            })\n        getExpenses()\n    }\n\n    const getExpenses = async () => {\n        const response = await axios.get(`${BASE_URL}get-expenses`)\n        setExpenses(response.data)\n        console.log(response.data)\n    }\n\n    const deleteExpense = async (id) => {\n        const res  = await axios.delete(`${BASE_URL}delete-expense/${id}`)\n        getExpenses()\n    }\n\n    const totalExpenses = () => {\n        let totalIncome = 0;\n        expenses.forEach((income) =>{\n            totalIncome = totalIncome + income.amount\n        })\n\n        return totalIncome;\n    }\n\n\n    const totalBalance = () => {\n        return totalIncome() - totalExpenses()\n    }\n\n    const transactionHistory = () => {\n        const history = [...incomes, ...expenses]\n        history.sort((a, b) => {\n            return new Date(b.createdAt) - new Date(a.createdAt)\n        })\n\n        return history.slice(0, 3)\n    }\n\n\n    return (\n        <GlobalContext.Provider value={{\n            addIncome,\n            getIncomes,\n            incomes,\n            deleteIncome,\n            expenses,\n            totalIncome,\n            addExpense,\n            getExpenses,\n            deleteExpense,\n            totalExpenses,\n            totalBalance,\n            transactionHistory,\n            error,\n            setError\n        }}>\n            {children}\n        </GlobalContext.Provider>\n    )\n}\n\nexport const useGlobalContext = () =>{\n    return useContext(GlobalContext)\n}","/Users/tnkuseija/Desktop/poche/frontend/src/styles/Layouts.js",[],[],"/Users/tnkuseija/Desktop/poche/frontend/src/Components/Navigation/Navigation.js",["131","132"],[],"import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport avatar from \"../../img/avatar.png\";\nimport { signout } from \"../../utils/Icons\";\nimport { menuItems } from \"../../utils/menuItems\";\nimport toRupiah from \"@develoka/angka-rupiah-js\";\nimport { useGlobalContext } from \"../../context/globalContext\";\n\nfunction Navigation({ active, setActive }) {\n  const { totalBalance } = useGlobalContext();\n  return (\n    <NavStyled>\n      <div className=\"user-con\">\n        <img src={avatar} alt=\"\" />\n        <div className=\"text\">\n          <h2>Ujang</h2>\n          <p>\n            {toRupiah(totalBalance(), {\n              floatingPoint: 0,\n            })}\n          </p>\n        </div>\n      </div>\n      <ul className=\"menu-items\">\n        {menuItems.map((item) => {\n          return (\n            <li\n              key={item.id}\n              onClick={() => setActive(item.id)}\n              className={active === item.id ? \"active\" : \"\"}\n            >\n              {item.icon}\n              <span>{item.title}</span>\n            </li>\n          );\n        })}\n      </ul>\n    </NavStyled>\n  );\n}\n\nconst NavStyled = styled.nav`\n  padding: 2rem 1.5rem;\n  width: 374px;\n  height: 100%;\n  background: rgba(252, 246, 249, 0.78);\n  border: 3px solid #ffffff;\n  backdrop-filter: blur(4.5px);\n  border-radius: 32px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  gap: 2rem;\n  .user-con {\n    height: 100px;\n    display: flex;\n    align-items: center;\n    gap: 1rem;\n    img {\n      width: 80px;\n      height: 80px;\n      border-radius: 50%;\n      object-fit: cover;\n      background: #fcf6f9;\n      border: 2px solid #ffffff;\n      padding: 0.2rem;\n      box-shadow: 0px 1px 17px rgba(0, 0, 0, 0.06);\n    }\n    h2 {\n      color: rgba(34, 34, 96, 1);\n    }\n    p {\n      color: rgba(34, 34, 96, 0.6);\n    }\n  }\n\n  .menu-items {\n    flex: 1;\n    display: flex;\n    flex-direction: column;\n    li {\n      display: grid;\n      grid-template-columns: 40px auto;\n      align-items: center;\n      margin: 0.6rem 0;\n      font-weight: 500;\n      cursor: pointer;\n      transition: all 0.4s ease-in-out;\n      color: rgba(34, 34, 96, 0.6);\n      padding-left: 1rem;\n      position: relative;\n      i {\n        color: rgba(34, 34, 96, 0.6);\n        font-size: 1.4rem;\n        transition: all 0.4s ease-in-out;\n      }\n    }\n  }\n\n  .active {\n    color: rgba(34, 34, 96, 1) !important;\n    i {\n      color: rgba(34, 34, 96, 1) !important;\n    }\n    &::before {\n      content: \"\";\n      position: absolute;\n      left: 0;\n      top: 0;\n      width: 4px;\n      height: 100%;\n      background: #222260;\n      border-radius: 0 10px 10px 0;\n    }\n  }\n`;\n\nexport default Navigation;\n","/Users/tnkuseija/Desktop/poche/frontend/src/Components/Expenses/Expenses.js",["133","134"],[],"import React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useGlobalContext } from \"../../context/globalContext\";\nimport { InnerLayout } from \"../../styles/Layouts\";\nimport ExpenseItem from \"../Item/ExpenseItem\";\nimport ExpenseForm from \"./ExpenseForm\";\nimport toRupiah from \"@develoka/angka-rupiah-js\";\n\nfunction Expenses() {\n  const { addIncome, expenses, getExpenses, deleteExpense, totalExpenses } =\n    useGlobalContext();\n\n  useEffect(() => {\n    getExpenses();\n  }, []);\n  return (\n    <ExpenseStyled>\n      <InnerLayout>\n        <h1>Expenses</h1>\n        <h2 className=\"total-income\">\n          Total Expense:{\" \"}\n          <span>{toRupiah(totalExpenses(), { floatingPoint: 0 })}</span>\n        </h2>\n        <div className=\"income-content\">\n          <div className=\"form-container\">\n            <ExpenseForm />\n          </div>\n          <div className=\"incomes\">\n            {expenses.map((income) => {\n              const { _id, title, amount, date, category, description, type } =\n                income;\n              console.log(income);\n              return (\n                <ExpenseItem\n                  key={_id}\n                  id={_id}\n                  title={title}\n                  description={description}\n                  amount={amount}\n                  date={date}\n                  type={type}\n                  category={category}\n                  indicatorColor=\"var(--color-green)\"\n                  deleteItem={deleteExpense}\n                />\n              );\n            })}\n          </div>\n        </div>\n      </InnerLayout>\n    </ExpenseStyled>\n  );\n}\n\nconst ExpenseStyled = styled.div`\n  display: flex;\n  overflow: auto;\n  .total-income {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background: #fcf6f9;\n    border: 2px solid #ffffff;\n    box-shadow: 0px 1px 15px rgba(0, 0, 0, 0.06);\n    border-radius: 20px;\n    padding: 1rem;\n    margin: 1rem 0;\n    font-size: 2rem;\n    gap: 0.5rem;\n    span {\n      font-size: 2.5rem;\n      font-weight: 800;\n      color: #ff85a2;\n    }\n  }\n  .income-content {\n    display: flex;\n    gap: 2rem;\n    .incomes {\n      flex: 1;\n    }\n  }\n`;\n\nexport default Expenses;\n","/Users/tnkuseija/Desktop/poche/frontend/src/Components/Orb/Orb.js",[],[],"/Users/tnkuseija/Desktop/poche/frontend/src/Components/Dashboard/Dashboard.js",["135","136","137"],[],"import React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useGlobalContext } from \"../../context/globalContext\";\nimport History from \"../../History/History\";\nimport { InnerLayout } from \"../../styles/Layouts\";\nimport { dollar } from \"../../utils/Icons\";\nimport Chart from \"../Chart/Chart\";\nimport toRupiah from \"@develoka/angka-rupiah-js\";\n\nfunction Dashboard() {\n  const {\n    totalExpenses,\n    incomes,\n    expenses,\n    totalIncome,\n    totalBalance,\n    getIncomes,\n    getExpenses,\n    totalPaylater,\n  } = useGlobalContext();\n\n  useEffect(() => {\n    getIncomes();\n    getExpenses();\n  }, []);\n\n  return (\n    <DashboardStyled>\n      <InnerLayout>\n        <h1>All Transactions</h1>\n        <div className=\"stats-con\">\n          <div className=\"chart-con\">\n            <Chart />\n            <div className=\"amount-con\">\n              <div className=\"income\">\n                <h2>Total Income</h2>\n                <p>\n                  <span>Rp. </span>\n                  {toRupiah(totalIncome(), {\n                    useUnit: true,\n                    symbol: null,\n                    k: true,\n                  })}\n                </p>\n              </div>\n              <div className=\"expense\">\n                <h2>Total Expense</h2>\n                <p>\n                  <span>Rp. </span>\n                  {toRupiah(totalExpenses(), {\n                    useUnit: true,\n                    symbol: null,\n                    k: true,\n                  })}\n                </p>\n              </div>\n              <div className=\"balance\">\n                <h2>Total Balance</h2>\n                <p>\n                  {toRupiah(totalBalance(), {\n                    symbol: \"IDR\",\n                    formal: false,\n                    useUnit: true,\n                    k: true,\n                    floatingPoint: 0,\n                  })}\n                </p>\n              </div>\n            </div>\n          </div>\n          <div className=\"history-con\">\n            <History />\n            <h2 className=\"salary-title\">\n              Min <span>Income</span>Max\n            </h2>\n            <div className=\"salary-item\">\n              <p>\n                {toRupiah(Math.min(...incomes.map((item) => item.amount)), {\n                  floatingPoint: 0,\n                })}\n              </p>\n              <p>\n                {toRupiah(Math.max(...incomes.map((item) => item.amount)), {\n                  floatingPoint: 0,\n                })}\n              </p>\n            </div>\n            <h2 className=\"salary-title\">\n              Min <span>Expense</span>Max\n            </h2>\n            <div className=\"salary-item\">\n              <p>\n                {toRupiah(Math.min(...expenses.map((item) => item.amount)), {\n                  floatingPoint: 0,\n                })}\n              </p>\n              <p>\n                {toRupiah(Math.max(...expenses.map((item) => item.amount)), {\n                  floatingPoint: 0,\n                })}\n              </p>\n            </div>\n          </div>\n        </div>\n      </InnerLayout>\n    </DashboardStyled>\n  );\n}\n\nconst DashboardStyled = styled.div`\n  .stats-con {\n    display: grid;\n    grid-template-columns: repeat(5, 1fr);\n    gap: 2rem;\n    .chart-con {\n      grid-column: 1 / 4;\n      height: 400px;\n      .amount-con {\n        display: grid;\n        grid-template-columns: repeat(4, 1fr);\n        gap: 2rem;\n        margin-top: 2rem;\n        .income,\n        .expense {\n          grid-column: span 2;\n        }\n        .income,\n        .expense,\n        .balance {\n          background: #fcf6f9;\n          border: 2px solid #ffffff;\n          box-shadow: 0px 1px 15px rgba(0, 0, 0, 0.06);\n          border-radius: 20px;\n          padding: 1rem;\n          p {\n            font-size: 2rem;\n            font-weight: 700;\n          }\n        }\n\n        .balance {\n          grid-column: 2 / 4;\n          display: flex;\n          flex-direction: column;\n          justify-content: center;\n          align-items: center;\n          p {\n            color: var(--color-green);\n            opacity: 0.6;\n            font-size: 2rem;\n          }\n        }\n      }\n    }\n\n    .history-con {\n      grid-column: 4 / -1;\n      h2 {\n        margin: 1rem 0;\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n      }\n      .salary-title {\n        font-size: 1.2rem;\n        span {\n          font-size: 1.8rem;\n        }\n      }\n      .salary-item {\n        background: #fcf6f9;\n        border: 2px solid #ffffff;\n        box-shadow: 0px 1px 15px rgba(0, 0, 0, 0.06);\n        padding: 1rem;\n        border-radius: 20px;\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        p {\n          font-weight: 600;\n          font-size: 1.6rem;\n        }\n      }\n    }\n  }\n`;\n\nexport default Dashboard;\n","/Users/tnkuseija/Desktop/poche/frontend/src/Components/Income/Income.js",["138","139"],[],"import React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useGlobalContext } from \"../../context/globalContext\";\nimport { InnerLayout } from \"../../styles/Layouts\";\nimport IncomeForm from \"./IncomeForm\";\nimport IncomeItem from \"../Item/IncomeItem\";\nimport toRupiah from \"@develoka/angka-rupiah-js\";\n\nfunction Income() {\n  const { addIncome, incomes, getIncomes, deleteIncome, totalIncome } =\n    useGlobalContext();\n\n  useEffect(() => {\n    getIncomes();\n  }, []);\n  return (\n    <IncomeStyled>\n      <InnerLayout>\n        <h1>Incomes</h1>\n        <h2 className=\"total-income\">\n          Total Income:{\" \"}\n          <span>{toRupiah(totalIncome(), { floatingPoint: 0 })}</span>\n        </h2>\n        <div className=\"income-content\">\n          <div className=\"form-container\">\n            <IncomeForm />\n          </div>\n          <div className=\"incomes\">\n            {incomes.map((income) => {\n              const { _id, title, amount, date, category, description, type } =\n                income;\n              return (\n                <IncomeItem\n                  key={_id}\n                  id={_id}\n                  title={title}\n                  description={description}\n                  amount={amount}\n                  date={date}\n                  type={type}\n                  category={category}\n                  indicatorColor=\"var(--color-green)\"\n                  deleteItem={deleteIncome}\n                />\n              );\n            })}\n          </div>\n        </div>\n      </InnerLayout>\n    </IncomeStyled>\n  );\n}\n\nconst IncomeStyled = styled.div`\n  display: flex;\n  overflow: auto;\n  .total-income {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background: #fcf6f9;\n    border: 2px solid #ffffff;\n    box-shadow: 0px 1px 15px rgba(0, 0, 0, 0.06);\n    border-radius: 20px;\n    padding: 1rem;\n    margin: 1rem 0;\n    font-size: 2rem;\n    gap: 0.5rem;\n    span {\n      font-size: 2.5rem;\n      font-weight: 800;\n      color: var(--color-green);\n    }\n  }\n  .income-content {\n    display: flex;\n    gap: 2rem;\n    .incomes {\n      flex: 1;\n    }\n  }\n`;\n\nexport default Income;\n","/Users/tnkuseija/Desktop/poche/frontend/src/Components/Expenses/ExpenseForm.js",["140"],[],"import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { useGlobalContext } from \"../../context/globalContext\";\nimport Button from \"../Button/Button\";\nimport { plus } from \"../../utils/Icons\";\nimport CurrencyFormat from \"react-currency-format\";\n\nfunction ExpenseForm() {\n  const { addExpense, error, setError } = useGlobalContext();\n  const [inputState, setInputState] = useState({\n    title: \"\",\n    amount: \"\",\n    date: \"\",\n    category: \"\",\n    description: \"\",\n  });\n\n  const { title, amount, date, category, description } = inputState;\n\n  const handleInput = (name) => (e) => {\n    setInputState({ ...inputState, [name]: e.target.value });\n    setError(\"\");\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    addExpense(inputState);\n    setInputState({\n      title: \"\",\n      amount: \"\",\n      date: \"\",\n      category: \"\",\n      description: \"\",\n    });\n  };\n\n  return (\n    <ExpenseFormStyled onSubmit={handleSubmit}>\n      {error && <p className=\"error\">{error}</p>}\n      <div className=\"input-control\">\n        <input\n          type=\"text\"\n          value={title}\n          name={\"title\"}\n          placeholder=\"Expense Title\"\n          onChange={handleInput(\"title\")}\n        />\n      </div>\n      <div className=\"input-control\">\n        <CurrencyFormat\n          value={amount}\n          thousandSeparator={true}\n          prefix={\"Rp. \"}\n          placeholder={\"Salary Amount\"}\n          onValueChange={(values) => {\n            const { formattedValue, value } = values;\n            setInputState({ ...inputState, amount: value });\n          }}\n        />\n      </div>\n      <div className=\"input-control\">\n        <DatePicker\n          id=\"date\"\n          placeholderText=\"Enter A Date\"\n          selected={date}\n          dateFormat=\"dd/MM/yyyy\"\n          onChange={(date) => {\n            setInputState({ ...inputState, date: date });\n          }}\n        />\n      </div>\n      <div className=\"selects input-control\">\n        <select\n          required\n          value={category}\n          name=\"category\"\n          id=\"category\"\n          onChange={handleInput(\"category\")}\n        >\n          <option value=\"\" disabled>\n            Select Option\n          </option>\n          <option value=\"education\">Education</option>\n          <option value=\"groceries\">Groceries</option>\n          <option value=\"health\">Health</option>\n          <option value=\"subscriptions\">Subscriptions</option>\n          <option value=\"takeaways\">Takeaways</option>\n          <option value=\"clothing\">Clothing</option>\n          <option value=\"travelling\">Travelling</option>\n          <option value=\"other\">Other</option>\n        </select>\n      </div>\n      <div className=\"input-control\">\n        <textarea\n          name=\"description\"\n          value={description}\n          placeholder=\"Add A Reference\"\n          id=\"description\"\n          cols=\"30\"\n          rows=\"4\"\n          onChange={handleInput(\"description\")}\n        ></textarea>\n      </div>\n      <div className=\"submit-btn\">\n        <Button\n          name={\"Add Expense\"}\n          icon={plus}\n          bPad={\".8rem 1.6rem\"}\n          bRad={\"30px\"}\n          bg={\"var(--color-accent\"}\n          color={\"#fff\"}\n        />\n      </div>\n    </ExpenseFormStyled>\n  );\n}\n\nconst ExpenseFormStyled = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 2rem;\n  input,\n  textarea,\n  select {\n    font-family: inherit;\n    font-size: inherit;\n    outline: none;\n    border: none;\n    padding: 0.5rem 1rem;\n    border-radius: 5px;\n    border: 2px solid #fff;\n    background: transparent;\n    resize: none;\n    box-shadow: 0px 1px 15px rgba(0, 0, 0, 0.06);\n    color: rgba(34, 34, 96, 0.9);\n    &::placeholder {\n      color: rgba(34, 34, 96, 0.4);\n    }\n  }\n  .input-control {\n    input {\n      width: 100%;\n    }\n  }\n\n  .selects {\n    display: flex;\n    justify-content: flex-end;\n    select {\n      color: rgba(34, 34, 96, 0.4);\n      &:focus,\n      &:active {\n        color: rgba(34, 34, 96, 1);\n      }\n    }\n  }\n\n  .submit-btn {\n    button {\n      box-shadow: 0px 1px 15px rgba(0, 0, 0, 0.06);\n      &:hover {\n        background: var(--color-green) !important;\n      }\n    }\n  }\n`;\nexport default ExpenseForm;\n","/Users/tnkuseija/Desktop/poche/frontend/src/utils/useWindowSize.js",[],[],"/Users/tnkuseija/Desktop/poche/frontend/src/utils/Icons.js",[],[],"/Users/tnkuseija/Desktop/poche/frontend/src/utils/menuItems.js",["141"],[],"import { dashboard, expenses, list, trend, dollar } from \"../utils/Icons\";\n\nexport const menuItems = [\n  {\n    id: 1,\n    title: \"Dashboard\",\n    icon: dashboard,\n    link: \"/dashboard\",\n  },\n  {\n    id: 2,\n    title: \"Incomes\",\n    icon: trend,\n    link: \"/dashboard\",\n  },\n  {\n    id: 3,\n    title: \"Expenses\",\n    icon: expenses,\n    link: \"/dashboard\",\n  },\n  {\n    id: 4,\n    title: \"TODO\",\n    icon: list,\n    link: \"/dashboard\",\n  },\n];\n","/Users/tnkuseija/Desktop/poche/frontend/src/History/History.js",[],[],"/Users/tnkuseija/Desktop/poche/frontend/src/Components/Chart/Chart.js",[],[],"/Users/tnkuseija/Desktop/poche/frontend/src/utils/dateFormat.js",[],[],"/Users/tnkuseija/Desktop/poche/frontend/src/Components/Button/Button.js",[],[],"/Users/tnkuseija/Desktop/poche/frontend/src/Components/Income/IncomeForm.js",["142","143","144","145"],[],"import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { useGlobalContext } from \"../../context/globalContext\";\nimport Button from \"../Button/Button\";\nimport { plus } from \"../../utils/Icons\";\nimport CurrencyFormat from \"react-currency-format\";\n\nfunction IncomeForm() {\n  const { addIncome, getIncomes, error, setError } = useGlobalContext();\n  const [inputState, setInputState] = useState({\n    title: \"\",\n    amount: \"\",\n    date: \"\",\n    category: \"\",\n    description: \"\",\n  });\n\n  const [separate, setSeparate] = useState();\n\n  const { title, amount, date, category, description } = inputState;\n\n  const handleInput = (name) => (e) => {\n    setInputState({ ...inputState, [name]: e.target.value });\n    setError(\"\");\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    addIncome(inputState);\n    setInputState({\n      title: \"\",\n      amount: \"\",\n      date: \"\",\n      category: \"\",\n      description: \"\",\n    });\n  };\n\n  return (\n    <FormStyled onSubmit={handleSubmit}>\n      {error && <p className=\"error\">{error}</p>}\n      <div className=\"input-control\">\n        <input\n          type=\"text\"\n          value={title}\n          name={\"title\"}\n          placeholder=\"Salary Title\"\n          onChange={handleInput(\"title\")}\n        />\n      </div>\n      <div className=\"input-control\">\n        <CurrencyFormat\n          value={amount}\n          thousandSeparator={true}\n          prefix={\"Rp. \"}\n          placeholder={\"Salary Amount\"}\n          onValueChange={(values) => {\n            const { formattedValue, value } = values;\n            setInputState({ ...inputState, amount: value });\n          }}\n        />\n      </div>\n      <div className=\"input-control\">\n        <DatePicker\n          id=\"date\"\n          placeholderText=\"Enter A Date\"\n          selected={date}\n          dateFormat=\"dd/MM/yyyy\"\n          onChange={(date) => {\n            setInputState({ ...inputState, date: date });\n          }}\n        />\n      </div>\n      <div className=\"selects input-control\">\n        <select\n          required\n          value={category}\n          name=\"category\"\n          id=\"category\"\n          onChange={handleInput(\"category\")}\n        >\n          <option value=\"\" disabled>\n            Select Option\n          </option>\n          <option value=\"salary\">Salary</option>\n          <option value=\"freelancing\">Freelancing</option>\n          <option value=\"investments\">Investiments</option>\n          <option value=\"stocks\">Stocks</option>\n          <option value=\"bitcoin\">Bitcoin</option>\n          <option value=\"bank\">Bank Transfer</option>\n          <option value=\"youtube\">Youtube</option>\n          <option value=\"other\">Other</option>\n        </select>\n      </div>\n      <div className=\"input-control\">\n        <textarea\n          name=\"description\"\n          value={description}\n          placeholder=\"Add A Reference\"\n          id=\"description\"\n          cols=\"30\"\n          rows=\"4\"\n          onChange={handleInput(\"description\")}\n        ></textarea>\n      </div>\n      <div className=\"submit-btn\">\n        <Button\n          name={\"Add Income\"}\n          icon={plus}\n          bPad={\".8rem 1.6rem\"}\n          bRad={\"30px\"}\n          bg={\"var(--color-accent\"}\n          color={\"#fff\"}\n        />\n      </div>\n    </FormStyled>\n  );\n}\n\nconst FormStyled = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 2rem;\n  input,\n  textarea,\n  select {\n    font-family: inherit;\n    font-size: inherit;\n    outline: none;\n    border: none;\n    padding: 0.5rem 1rem;\n    border-radius: 5px;\n    border: 2px solid #fff;\n    background: transparent;\n    resize: none;\n    box-shadow: 0px 1px 15px rgba(0, 0, 0, 0.06);\n    color: rgba(34, 34, 96, 0.9);\n    &::placeholder {\n      color: rgba(34, 34, 96, 0.4);\n    }\n  }\n  .input-control {\n    input {\n      width: 100%;\n    }\n  }\n\n  .selects {\n    display: flex;\n    justify-content: flex-end;\n    select {\n      color: rgba(34, 34, 96, 0.4);\n      &:focus,\n      &:active {\n        color: rgba(34, 34, 96, 1);\n      }\n    }\n  }\n\n  .submit-btn {\n    button {\n      box-shadow: 0px 1px 15px rgba(0, 0, 0, 0.06);\n      &:hover {\n        background: var(--color-green) !important;\n      }\n    }\n  }\n`;\nexport default IncomeForm;\n","/Users/tnkuseija/Desktop/poche/frontend/src/Components/Item/IncomeItem.js",["146"],[],"import React from \"react\";\nimport styled from \"styled-components\";\nimport { dateFormat } from \"../../utils/dateFormat\";\nimport {\n  money,\n  freelance,\n  stocks,\n  users,\n  bitcoin,\n  card,\n  yt,\n  piggy,\n} from \"../../utils/Icons\";\nimport { dollar, calender, comment, trash } from \"../../utils/Icons\";\nimport Button from \"../Button/Button\";\nimport toRupiah from \"@develoka/angka-rupiah-js\";\n\nfunction IncomeItem({\n  id,\n  title,\n  amount,\n  date,\n  category,\n  description,\n  deleteItem,\n  indicatorColor,\n}) {\n  const incomeIcons = () => {\n    switch (category) {\n      case \"salary\":\n        return money;\n      case \"freelancing\":\n        return freelance;\n      case \"investments\":\n        return stocks;\n      case \"stocks\":\n        return users;\n      case \"bitcoin\":\n        return bitcoin;\n      case \"bank\":\n        return card;\n      case \"youtube\":\n        return yt;\n      case \"other\":\n        return piggy;\n      default:\n        return \"\";\n    }\n  };\n\n  return (\n    <IncomeItemStyled indicator={indicatorColor}>\n      <div className=\"icon\">{incomeIcons()}</div>\n      <div className=\"content\">\n        <h5>{title}</h5>\n        <div className=\"inner-content\">\n          <div className=\"text\">\n            <p>{toRupiah(amount, { floatingPoint: 0 })}</p>\n            <p>\n              {calender} {dateFormat(date)}\n            </p>\n            <p>\n              {comment}\n              {description}\n            </p>\n          </div>\n          <div className=\"btn-con\">\n            <Button\n              icon={trash}\n              bPad={\"1rem\"}\n              bRad={\"50%\"}\n              bg={\"var(--primary-color\"}\n              color={\"#fff\"}\n              iColor={\"#fff\"}\n              hColor={\"var(--color-green)\"}\n              onClick={() => deleteItem(id)}\n            />\n          </div>\n        </div>\n      </div>\n    </IncomeItemStyled>\n  );\n}\n\nconst IncomeItemStyled = styled.div`\n  background: #fcf6f9;\n  border: 2px solid #ffffff;\n  box-shadow: 0px 1px 15px rgba(0, 0, 0, 0.06);\n  border-radius: 20px;\n  padding: 1rem;\n  margin-bottom: 1rem;\n  display: flex;\n  align-items: center;\n  gap: 1rem;\n  width: 100%;\n  color: #222260;\n  .icon {\n    width: 80px;\n    height: 80px;\n    border-radius: 20px;\n    background: #f5f5f5;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border: 2px solid #ffffff;\n    i {\n      font-size: 2.6rem;\n    }\n  }\n\n  .content {\n    flex: 1;\n    display: flex;\n    flex-direction: column;\n    gap: 0.2rem;\n    h5 {\n      font-size: 1.3rem;\n      padding-left: 2rem;\n      position: relative;\n      &::before {\n        content: \"\";\n        position: absolute;\n        left: 0;\n        top: 50%;\n        transform: translateY(-50%);\n        width: 0.8rem;\n        height: 0.8rem;\n        border-radius: 50%;\n        background: ${(props) => props.indicator};\n      }\n    }\n\n    .inner-content {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      .text {\n        display: flex;\n        align-items: center;\n        gap: 1.5rem;\n        p {\n          display: flex;\n          align-items: center;\n          gap: 0.5rem;\n          color: var(--primary-color);\n          opacity: 0.8;\n        }\n      }\n    }\n  }\n`;\n\nexport default IncomeItem;\n","/Users/tnkuseija/Desktop/poche/frontend/src/Components/Item/ExpenseItem.js",["147"],[],"import React from \"react\";\nimport styled from \"styled-components\";\nimport { dateFormat } from \"../../utils/dateFormat\";\nimport {\n  book,\n  food,\n  medical,\n  tv,\n  takeaway,\n  clothing,\n  freelance,\n  circle,\n  dollar,\n  calender,\n  comment,\n  trash,\n} from \"../../utils/Icons\";\nimport Button from \"../Button/Button\";\nimport toRupiah from \"@develoka/angka-rupiah-js\";\n\nfunction ExpenseItem({\n  id,\n  title,\n  amount,\n  date,\n  category,\n  description,\n  deleteItem,\n  indicatorColor,\n}) {\n  const expenseIcons = () => {\n    switch (category) {\n      case \"education\":\n        return book;\n      case \"groceries\":\n        return food;\n      case \"health\":\n        return medical;\n      case \"subscriptions\":\n        return tv;\n      case \"takeaways\":\n        return takeaway;\n      case \"clothing\":\n        return clothing;\n      case \"travelling\":\n        return freelance;\n      case \"other\":\n        return circle;\n      default:\n        return \"\";\n    }\n  };\n\n  return (\n    <ExpenseItemStyled indicator={indicatorColor}>\n      <div className=\"icon\">{expenseIcons()}</div>\n      <div className=\"content\">\n        <h5>{title}</h5>\n        <div className=\"inner-content\">\n          <div className=\"text\">\n            <p>{toRupiah(amount, { floatingPoint: 0 })}</p>\n            <p>\n              {calender} {dateFormat(date)}\n            </p>\n            <p>\n              {comment}\n              {description}\n            </p>\n          </div>\n          <div className=\"btn-con\">\n            <Button\n              icon={trash}\n              bPad={\"1rem\"}\n              bRad={\"50%\"}\n              bg={\"var(--primary-color\"}\n              color={\"#fff\"}\n              iColor={\"#fff\"}\n              hColor={\"var(--color-green)\"}\n              onClick={() => deleteItem(id)}\n            />\n          </div>\n        </div>\n      </div>\n    </ExpenseItemStyled>\n  );\n}\n\nconst ExpenseItemStyled = styled.div`\n  background: #fcf6f9;\n  border: 2px solid #ffffff;\n  box-shadow: 0px 1px 15px rgba(0, 0, 0, 0.06);\n  border-radius: 20px;\n  padding: 1rem;\n  margin-bottom: 1rem;\n  display: flex;\n  align-items: center;\n  gap: 1rem;\n  width: 100%;\n  color: #222260;\n  .icon {\n    width: 80px;\n    height: 80px;\n    border-radius: 20px;\n    background: #f5f5f5;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border: 2px solid #ffffff;\n    i {\n      font-size: 2.6rem;\n    }\n  }\n\n  .content {\n    flex: 1;\n    display: flex;\n    flex-direction: column;\n    gap: 0.2rem;\n    h5 {\n      font-size: 1.3rem;\n      padding-left: 2rem;\n      position: relative;\n      &::before {\n        content: \"\";\n        position: absolute;\n        left: 0;\n        top: 50%;\n        transform: translateY(-50%);\n        width: 0.8rem;\n        height: 0.8rem;\n        border-radius: 50%;\n        background: ${(props) => props.indicator};\n      }\n    }\n\n    .inner-content {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      .text {\n        display: flex;\n        align-items: center;\n        gap: 1.5rem;\n        p {\n          display: flex;\n          align-items: center;\n          gap: 0.5rem;\n          color: var(--primary-color);\n          opacity: 0.8;\n        }\n      }\n    }\n  }\n`;\n\nexport default ExpenseItem;\n","/Users/tnkuseija/Desktop/poche/frontend/src/Components/Todo/Todolist.js",[],[],{"ruleId":"148","severity":1,"message":"149","line":13,"column":3,"nodeType":"150","messageId":"151","endLine":13,"endColumn":18},{"ruleId":"148","severity":1,"message":"152","line":14,"column":3,"nodeType":"150","messageId":"151","endLine":14,"endColumn":22},{"ruleId":"148","severity":1,"message":"153","line":15,"column":3,"nodeType":"150","messageId":"151","endLine":15,"endColumn":14},{"ruleId":"148","severity":1,"message":"154","line":18,"column":15,"nodeType":"150","messageId":"151","endLine":18,"endColumn":23},{"ruleId":"148","severity":1,"message":"155","line":32,"column":15,"nodeType":"150","messageId":"151","endLine":32,"endColumn":18},{"ruleId":"148","severity":1,"message":"154","line":48,"column":15,"nodeType":"150","messageId":"151","endLine":48,"endColumn":23},{"ruleId":"148","severity":1,"message":"155","line":62,"column":15,"nodeType":"150","messageId":"151","endLine":62,"endColumn":18},{"ruleId":"148","severity":1,"message":"156","line":1,"column":17,"nodeType":"150","messageId":"151","endLine":1,"endColumn":25},{"ruleId":"148","severity":1,"message":"157","line":4,"column":10,"nodeType":"150","messageId":"151","endLine":4,"endColumn":17},{"ruleId":"148","severity":1,"message":"158","line":10,"column":11,"nodeType":"150","messageId":"151","endLine":10,"endColumn":20},{"ruleId":"159","severity":1,"message":"160","line":15,"column":6,"nodeType":"161","endLine":15,"endColumn":8,"suggestions":"162"},{"ruleId":"148","severity":1,"message":"163","line":6,"column":10,"nodeType":"150","messageId":"151","endLine":6,"endColumn":16},{"ruleId":"148","severity":1,"message":"164","line":19,"column":5,"nodeType":"150","messageId":"151","endLine":19,"endColumn":18},{"ruleId":"159","severity":1,"message":"165","line":25,"column":6,"nodeType":"161","endLine":25,"endColumn":8,"suggestions":"166"},{"ruleId":"148","severity":1,"message":"158","line":10,"column":11,"nodeType":"150","messageId":"151","endLine":10,"endColumn":20},{"ruleId":"159","severity":1,"message":"167","line":15,"column":6,"nodeType":"161","endLine":15,"endColumn":8,"suggestions":"168"},{"ruleId":"148","severity":1,"message":"169","line":58,"column":21,"nodeType":"150","messageId":"151","endLine":58,"endColumn":35},{"ruleId":"148","severity":1,"message":"163","line":1,"column":44,"nodeType":"150","messageId":"151","endLine":1,"endColumn":50},{"ruleId":"148","severity":1,"message":"170","line":11,"column":22,"nodeType":"150","messageId":"151","endLine":11,"endColumn":32},{"ruleId":"148","severity":1,"message":"171","line":20,"column":10,"nodeType":"150","messageId":"151","endLine":20,"endColumn":18},{"ruleId":"148","severity":1,"message":"172","line":20,"column":20,"nodeType":"150","messageId":"151","endLine":20,"endColumn":31},{"ruleId":"148","severity":1,"message":"169","line":60,"column":21,"nodeType":"150","messageId":"151","endLine":60,"endColumn":35},{"ruleId":"148","severity":1,"message":"163","line":14,"column":10,"nodeType":"150","messageId":"151","endLine":14,"endColumn":16},{"ruleId":"148","severity":1,"message":"163","line":13,"column":3,"nodeType":"150","messageId":"151","endLine":13,"endColumn":9},"no-unused-vars","'MantineProvider' is defined but never used.","Identifier","unusedVar","'ColorSchemeProvider' is defined but never used.","'ColorScheme' is defined but never used.","'response' is assigned a value but never used.","'res' is assigned a value but never used.","'useState' is defined but never used.","'signout' is defined but never used.","'addIncome' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getExpenses'. Either include it or remove the dependency array.","ArrayExpression",["173"],"'dollar' is defined but never used.","'totalPaylater' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getExpenses' and 'getIncomes'. Either include them or remove the dependency array.",["174"],"React Hook useEffect has a missing dependency: 'getIncomes'. Either include it or remove the dependency array.",["175"],"'formattedValue' is assigned a value but never used.","'getIncomes' is assigned a value but never used.","'separate' is assigned a value but never used.","'setSeparate' is assigned a value but never used.",{"desc":"176","fix":"177"},{"desc":"178","fix":"179"},{"desc":"180","fix":"181"},"Update the dependencies array to be: [getExpenses]",{"range":"182","text":"183"},"Update the dependencies array to be: [getExpenses, getIncomes]",{"range":"184","text":"185"},"Update the dependencies array to be: [getIncomes]",{"range":"186","text":"187"},[505,507],"[getExpenses]",[629,631],"[getExpenses, getIncomes]",[493,495],"[getIncomes]"]