{"ast":null,"code":"'use client';\n\nimport { useState } from 'react';\nfunction useUncontrolled(_ref) {\n  let {\n    value,\n    defaultValue,\n    finalValue,\n    onChange = () => {}\n  } = _ref;\n  const [uncontrolledValue, setUncontrolledValue] = useState(defaultValue !== void 0 ? defaultValue : finalValue);\n  const handleUncontrolledChange = function (val) {\n    setUncontrolledValue(val);\n    for (var _len = arguments.length, payload = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      payload[_key - 1] = arguments[_key];\n    }\n    onChange?.(val, ...payload);\n  };\n  if (value !== void 0) {\n    return [value, onChange, true];\n  }\n  return [uncontrolledValue, handleUncontrolledChange, false];\n}\nexport { useUncontrolled };","map":{"version":3,"mappings":";;;AAEO,SAASA,eAAe,OAM5B;EAAA,IAN6B;IAC9BC,KAAK;IACLC,YAAY;IACZC,UAAU;IACVC,QAAQ,GAAG,MAAM,CAChB;EACH,CAAC;EACC,MAAM,CAACC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGC,QAAQ,CACxDL,YAAY,KAAK,KAAK,CAAC,GAAGA,YAAY,GAAGC,UAAU,CACpD;EACD,MAAMK,wBAAwB,GAAG,UAACC,GAAG,EAAiB;IACpDH,oBAAoB,CAACG,GAAG,CAAC;IAAC,kCADcC,OAAO;MAAPA,OAAO;IAAA;IAE/CN,QAAQ,GAAGK,GAAG,EAAE,GAAGC,OAAO,CAAC;EAC/B,CAAG;EACD,IAAIT,KAAK,KAAK,KAAK,CAAC,EAAE;IACpB,OAAO,CAACA,KAAK,EAAEG,QAAQ,EAAE,IAAI,CAAC;EAC/B;EACD,OAAO,CAACC,iBAAiB,EAAEG,wBAAwB,EAAE,KAAK,CAAC;AAC7D","names":["useUncontrolled","value","defaultValue","finalValue","onChange","uncontrolledValue","setUncontrolledValue","useState","handleUncontrolledChange","val","payload"],"sources":["/Users/tnkuseija/Desktop/poche/frontend/node_modules/@mantine/hooks/src/use-uncontrolled/use-uncontrolled.ts"],"sourcesContent":["import { useState } from 'react';\n\ninterface UseUncontrolledInput<T> {\n  /** Value for controlled state */\n  value?: T;\n\n  /** Initial value for uncontrolled state */\n  defaultValue?: T;\n\n  /** Final value for uncontrolled state when value and defaultValue are not provided */\n  finalValue?: T;\n\n  /** Controlled state onChange handler */\n  onChange?: (value: T, ...payload: any[]) => void;\n}\n\nexport function useUncontrolled<T>({\n  value,\n  defaultValue,\n  finalValue,\n  onChange = () => {},\n}: UseUncontrolledInput<T>): [T, (value: T, ...payload: any[]) => void, boolean] {\n  const [uncontrolledValue, setUncontrolledValue] = useState(\n    defaultValue !== undefined ? defaultValue : finalValue\n  );\n\n  const handleUncontrolledChange = (val: T, ...payload: any[]) => {\n    setUncontrolledValue(val);\n    onChange?.(val, ...payload);\n  };\n\n  if (value !== undefined) {\n    return [value as T, onChange, true];\n  }\n\n  return [uncontrolledValue as T, handleUncontrolledChange, false];\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}