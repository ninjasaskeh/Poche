{"ast":null,"code":"var _jsxFileName = \"/Users/tnkuseija/Desktop/poche/frontend/src/Components/Todo/Todolist.js\",\n  _s = $RefreshSig$();\nimport styled from \"styled-components\";\nimport { InnerLayout } from \"../../styles/Layouts\";\nimport { Button, Container, Text, Title, Modal, TextInput, Group, Card, ActionIcon, Code } from \"@mantine/core\";\nimport { useState, useRef, useEffect } from \"react\";\nimport { MoonStars, Sun, Trash } from \"tabler-icons-react\";\nimport { MantineProvider, ColorSchemeProvider, ColorScheme } from \"@mantine/core\";\nimport { useLocalStorage } from \"@mantine/hooks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Todolist() {\n  _s();\n  onst[(tasks, setTasks)] = useState([]);\n  const [opened, setOpened] = useState(false);\n  const [colorScheme, setColorScheme] = useLocalStorage({\n    key: \"mantine-color-scheme\",\n    defaultValue: \"light\",\n    getInitialValueInEffect: true\n  });\n  const taskTitle = useRef(\"\");\n  const taskSummary = useRef(\"\");\n  function createTask() {\n    setTasks([...tasks, {\n      title: taskTitle.current.value,\n      summary: taskSummary.current.value\n    }]);\n    saveTasks([...tasks, {\n      title: taskTitle.current.value,\n      summary: taskSummary.current.value\n    }]);\n  }\n  function deleteTask(index) {\n    var clonedTasks = [...tasks];\n    clonedTasks.splice(index, 1);\n    setTasks(clonedTasks);\n    saveTasks([...clonedTasks]);\n  }\n  function loadTasks() {\n    let loadedTasks = localStorage.getItem(\"tasks\");\n    let tasks = JSON.parse(loadedTasks);\n    if (tasks) {\n      setTasks(tasks);\n    }\n  }\n  function saveTasks(tasks) {\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n  }\n  useEffect(() => {\n    loadTasks();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(TodolistStyled, {\n    children: /*#__PURE__*/_jsxDEV(InnerLayout, {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n_s(Todolist, \"2z/8fcMU63LfmkVE2HxIJFrvR20=\", false, function () {\n  return [useLocalStorage];\n});\n_c = Todolist;\nconst TodolistStyled = styled.div`\n  display: flex;\n  overflow: auto;\n  .total-income {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background: #fcf6f9;\n    border: 2px solid #ffffff;\n    box-shadow: 0px 1px 15px rgba(0, 0, 0, 0.06);\n    border-radius: 20px;\n    padding: 1rem;\n    margin: 1rem 0;\n    font-size: 2rem;\n    gap: 0.5rem;\n    span {\n      font-size: 2.5rem;\n      font-weight: 800;\n      color: var(--color-green);\n    }\n  }\n`;\n_c2 = TodolistStyled;\nexport default Todolist;\nvar _c, _c2;\n$RefreshReg$(_c, \"Todolist\");\n$RefreshReg$(_c2, \"TodolistStyled\");","map":{"version":3,"names":["styled","InnerLayout","Button","Container","Text","Title","Modal","TextInput","Group","Card","ActionIcon","Code","useState","useRef","useEffect","MoonStars","Sun","Trash","MantineProvider","ColorSchemeProvider","ColorScheme","useLocalStorage","Todolist","onst","tasks","setTasks","opened","setOpened","colorScheme","setColorScheme","key","defaultValue","getInitialValueInEffect","taskTitle","taskSummary","createTask","title","current","value","summary","saveTasks","deleteTask","index","clonedTasks","splice","loadTasks","loadedTasks","localStorage","getItem","JSON","parse","setItem","stringify","TodolistStyled","div"],"sources":["/Users/tnkuseija/Desktop/poche/frontend/src/Components/Todo/Todolist.js"],"sourcesContent":["import styled from \"styled-components\";\nimport { InnerLayout } from \"../../styles/Layouts\";\nimport {\n  Button,\n  Container,\n  Text,\n  Title,\n  Modal,\n  TextInput,\n  Group,\n  Card,\n  ActionIcon,\n  Code,\n} from \"@mantine/core\";\nimport { useState, useRef, useEffect } from \"react\";\nimport { MoonStars, Sun, Trash } from \"tabler-icons-react\";\nimport {\n  MantineProvider,\n  ColorSchemeProvider,\n  ColorScheme,\n} from \"@mantine/core\";\nimport { useLocalStorage } from \"@mantine/hooks\";\n\nfunction Todolist() {\n  onst[(tasks, setTasks)] = useState([]);\n  const [opened, setOpened] = useState(false);\n\n  const [colorScheme, setColorScheme] = useLocalStorage({\n    key: \"mantine-color-scheme\",\n    defaultValue: \"light\",\n    getInitialValueInEffect: true,\n  });\n\n  const taskTitle = useRef(\"\");\n  const taskSummary = useRef(\"\");\n\n  function createTask() {\n    setTasks([\n      ...tasks,\n      {\n        title: taskTitle.current.value,\n        summary: taskSummary.current.value,\n      },\n    ]);\n\n    saveTasks([\n      ...tasks,\n      {\n        title: taskTitle.current.value,\n        summary: taskSummary.current.value,\n      },\n    ]);\n  }\n  function deleteTask(index) {\n    var clonedTasks = [...tasks];\n\n    clonedTasks.splice(index, 1);\n\n    setTasks(clonedTasks);\n\n    saveTasks([...clonedTasks]);\n  }\n\n  function loadTasks() {\n    let loadedTasks = localStorage.getItem(\"tasks\");\n\n    let tasks = JSON.parse(loadedTasks);\n\n    if (tasks) {\n      setTasks(tasks);\n    }\n  }\n\n  function saveTasks(tasks) {\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n  }\n\n  useEffect(() => {\n    loadTasks();\n  }, []);\n\n  return (\n    <TodolistStyled>\n      <InnerLayout>\n        <h1>Todo</h1>\n      </InnerLayout>\n    </TodolistStyled>\n  );\n}\n\nconst TodolistStyled = styled.div`\n  display: flex;\n  overflow: auto;\n  .total-income {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background: #fcf6f9;\n    border: 2px solid #ffffff;\n    box-shadow: 0px 1px 15px rgba(0, 0, 0, 0.06);\n    border-radius: 20px;\n    padding: 1rem;\n    margin: 1rem 0;\n    font-size: 2rem;\n    gap: 0.5rem;\n    span {\n      font-size: 2.5rem;\n      font-weight: 800;\n      color: var(--color-green);\n    }\n  }\n`;\n\nexport default Todolist;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}